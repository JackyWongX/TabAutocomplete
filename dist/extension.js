(()=>{"use strict";var e={32:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.URL=t.DNS=void 0;const s=n(355),o=n(157);var i=n(157);function r(e,t,n,i){return(0,o.default)(48,s.default,e,t,n,i)}Object.defineProperty(t,"DNS",{enumerable:!0,get:function(){return i.DNS}}),Object.defineProperty(t,"URL",{enumerable:!0,get:function(){return i.URL}}),r.DNS=o.DNS,r.URL=o.URL,t.default=r},92:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ClientFactory=void 0;const s=n(628),o=n(373),i=n(870),r=n(642),a=n(498);t.ClientFactory=class{constructor(e){this.configManager=e,this.logger=s.Logger.getInstance()}createClient(e){switch(this.logger.debug(`创建API客户端: 提供商=${e.provider}, 模型=${e.model}`),e.provider){case o.ModelProvider.OLLAMA:return new i.OllamaClient(this.configManager,e);case o.ModelProvider.DEEPSEEK:return new r.DeepSeekClient(this.configManager,e);case o.ModelProvider.OPENAI:return new a.OpenAIClient(this.configManager,e);default:throw this.logger.error(`不支持的模型提供商: ${e.provider}`),new Error(`不支持的模型提供商: ${e.provider}`)}}}},135:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getFileName=t.getFileExtension=t.safeParseJSON=t.generateUniqueId=t.calculateLevenshteinDistance=t.formatCode=t.throttle=t.debounce=void 0,t.debounce=function(e,t){let n=null;return function(...s){return new Promise((o=>{n&&clearTimeout(n),n=setTimeout((async()=>{const t=await e(...s);o(t)}),t)}))}},t.throttle=function(e,t){let n,s=0;return function(...o){const i=Date.now();if(i-s>=t)return s=i,n=e.apply(this,o),n}},t.formatCode=function(e,t){return e.trim()},t.calculateLevenshteinDistance=function(e,t){const n=e.length,s=t.length,o=[];for(let e=0;e<=n;e++)o[e]=[],o[e][0]=e;for(let e=0;e<=s;e++)o[0][e]=e;for(let i=1;i<=n;i++)for(let n=1;n<=s;n++){const s=e[i-1]===t[n-1]?0:1;o[i][n]=Math.min(o[i-1][n]+1,o[i][n-1]+1,o[i-1][n-1]+s)}return o[n][s]},t.generateUniqueId=function(){return Date.now().toString(36)+Math.random().toString(36).substr(2,5)},t.safeParseJSON=function(e,t){try{return JSON.parse(e)}catch(e){return t}},t.getFileExtension=function(e){const t=e.match(/\.([^.]+)$/);return t?t[1]:""},t.getFileName=function(e){const t=e.match(/([^/\\]+)$/);return t?t[1]:""}},152:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0});const s=n(982);t.default={randomUUID:s.randomUUID}},157:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.URL=t.DNS=t.stringToBytes=void 0;const s=n(524),o=n(202);function i(e){e=unescape(encodeURIComponent(e));const t=new Uint8Array(e.length);for(let n=0;n<e.length;++n)t[n]=e.charCodeAt(n);return t}t.stringToBytes=i,t.DNS="6ba7b810-9dad-11d1-80b4-00c04fd430c8",t.URL="6ba7b811-9dad-11d1-80b4-00c04fd430c8",t.default=function(e,t,n,r,a,l){const c="string"==typeof n?i(n):n,g="string"==typeof r?(0,s.default)(r):r;if("string"==typeof r&&(r=(0,s.default)(r)),16!==r?.length)throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");let h=new Uint8Array(16+c.length);if(h.set(g),h.set(c,g.length),h=t(h),h[6]=15&h[6]|e,h[8]=63&h[8]|128,a){l=l||0;for(let e=0;e<16;++e)a[l+e]=h[e];return a}return(0,o.unsafeStringify)(h)}},202:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.unsafeStringify=void 0;const s=n(873),o=[];for(let e=0;e<256;++e)o.push((e+256).toString(16).slice(1));function i(e,t=0){return(o[e[t+0]]+o[e[t+1]]+o[e[t+2]]+o[e[t+3]]+"-"+o[e[t+4]]+o[e[t+5]]+"-"+o[e[t+6]]+o[e[t+7]]+"-"+o[e[t+8]]+o[e[t+9]]+"-"+o[e[t+10]]+o[e[t+11]]+o[e[t+12]]+o[e[t+13]]+o[e[t+14]]+o[e[t+15]]).toLowerCase()}t.unsafeStringify=i,t.default=function(e,t=0){const n=i(e,t);if(!(0,s.default)(n))throw TypeError("Stringified UUID is invalid");return n}},259:e=>{e.exports=function(e){e.prototype[Symbol.iterator]=function*(){for(let e=this.head;e;e=e.next)yield e.value}}},265:function(e,t,n){var s=this&&this.__createBinding||(Object.create?function(e,t,n,s){void 0===s&&(s=n),Object.defineProperty(e,s,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,s){void 0===s&&(s=n),e[s]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&s(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.deactivate=t.activate=void 0;const r=i(n(398)),a=n(314),l=n(270),c=n(332),g=n(412),h=n(628),d=n(933),u=n(92);t.activate=async function(e){const t=h.Logger.getInstance(),n=r.commands.registerCommand("tabAutoComplete.showLogs",(()=>{t.showOutputChannel()}));e.subscriptions.push(n);try{const s=new l.ConfigManager;t.setLogLevel(s.getLogLevel()),t.info("TabAutoComplete 插件已激活");const o=s.getSelectedModelConfig();if(!o)return void r.window.showErrorMessage("未找到可用的模型配置，请在设置中添加模型");const i=new c.CacheManager(e.globalState,s),p=new u.ClientFactory(s);try{const O=p.createClient(o),I=await O.testConnection();I.success?t.info(`成功连接到${o.provider}模型API: ${o.model}`):r.window.showWarningMessage(`无法连接到${o.provider}模型API: ${I.message}。请检查配置并确保服务正在运行。`)}catch(A){r.window.showWarningMessage(`连接测试出错: ${A.message}`)}const f=new g.StatusBarManager(s);e.subscriptions.push(f);const m=r.languages.createDiagnosticCollection("tabAutoComplete");e.subscriptions.push(m);const b=new a.CompletionProvider(s,t,i,f.getStatusBarItem(),m,e),w=["javascript","typescript","python","java","c","cpp","csharp","go","rust","php","ruby","html","css","markdown"];for(const T of w){const E={language:T,scheme:"file"},_=r.languages.registerCompletionItemProvider(E,b,...b.getTriggerCharacters());e.subscriptions.push(_)}const v=new d.CommandManager(s,i,b,e);e.subscriptions.push(v);let y=null,C=!1,x=Date.now();const $=r.commands.registerCommand("type",(async e=>{const n=r.window.activeTextEditor;if(!n)return void await r.commands.executeCommand("default:type",e);const o=e.text;if(t.debug("输入字符",o),!M(o))return await r.commands.executeCommand("default:type",e),void t.debug("特殊字符不处理",o);s.isEnabled()?(await r.commands.executeCommand("default:type",e),b.cancel(),b.clearPreview(),x=Date.now(),y&&clearTimeout(y),y=setTimeout((async()=>{try{if(Date.now()-x<s.getDebounceDelay())return;if(!b.isFileTypeSupported(n.document))return;C=!0;const e=n.selection.active,t=new r.CancellationTokenSource,i=await b.provideCompletionItems(n.document,e,t.token,{triggerKind:r.CompletionTriggerKind.TriggerCharacter,triggerCharacter:o});if(i){let t=[];if(t=Array.isArray(i)?i:i.items,t.length>0){const n=t[0],s="string"==typeof n.insertText?n.insertText:n.insertText?.value||"";await b.setPreview(s,e)}}}catch(e){t.error("处理键盘输入时出错",e)}finally{C=!1}}),s.getDebounceDelay())):await r.commands.executeCommand("default:type",e)}));function M(e){if(!e||1!==e.length)return!1;const t=e.charCodeAt(0),n=t>31&&t<127,s=t>=19968&&t<=40959,o=[".",",",":",";","!","?",'"',"'","`","(",")","[","]","{","}","+","-","*","/","=","<",">","_","@","#","$","%","^","&","|","\\","~"].includes(e),i=[" ","\n"].includes(e);return n||s||o||i}e.subscriptions.push($);const P=r.window.onDidChangeTextEditorSelection((e=>{if(b.hasActivePreview()){const t=r.window.activeTextEditor;t&&e.textEditor===t&&e.kind===r.TextEditorSelectionChangeKind.Keyboard&&(b.clearPreview(),b.cancel(),b.lastShownCompletion=null)}}));e.subscriptions.push(P);const S=r.workspace.onDidChangeTextDocument((e=>{(function(e,t){const n=e.document.fileName,s=t.getEnabledFileTypes(),o=t.getDisabledFileTypes(),i=n.substring(n.lastIndexOf("."));return!o.includes(i)&&(s.includes(i)||s.includes("*"))})(e,s)&&i.cacheDocumentChanges(e)}));e.subscriptions.push(S),b.setRegistered(!0)}catch(j){t.error("激活插件时发生错误",j),r.window.showErrorMessage("激活插件时发生错误，请检查日志输出。")}},t.deactivate=function(){}},270:function(e,t,n){var s=this&&this.__createBinding||(Object.create?function(e,t,n,s){void 0===s&&(s=n),Object.defineProperty(e,s,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,s){void 0===s&&(s=n),e[s]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&s(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.ConfigManager=void 0;const r=i(n(398)),a=n(628),l=n(373);t.ConfigManager=class{constructor(){this.configPrefix="tabAutoComplete",this.cachedConfig={enabled:!0,triggerDelay:300,temperature:.3,maxTokens:3e3,maxContextLines:2e3,includeImports:!0,includeComments:!0,cacheEnabled:!0,retentionPeriodHours:24,maxSnippets:1e3,enabledFileTypes:[".js",".ts",".jsx",".tsx",".py",".java",".c",".cpp",".cs",".go",".rs",".php",".rb",".html",".css",".md","*"],disabledFileTypes:[".txt",".log",".json",".yml",".yaml"],logLevel:a.LogLevel.ERROR,adaptToProjectSize:!0,models:[],selectedModelIndex:0,selectedModelName:"qwen2.5-coder:7b"},this.logger=a.Logger.getInstance(),this.loadConfiguration(),this.configChangeListener=r.workspace.onDidChangeConfiguration((e=>{e.affectsConfiguration(this.configPrefix)&&this.loadConfiguration()})),this.logger.debug("ConfigManager初始化完成")}loadConfiguration(){const e=r.workspace.getConfiguration(this.configPrefix);this.cachedConfig.enabled=e.get("general.enabled",!0),this.cachedConfig.triggerDelay=e.get("general.triggerDelay",300),this.cachedConfig.temperature=e.get("model.temperature",.3),this.cachedConfig.maxTokens=e.get("model.maxTokens",300),this.cachedConfig.maxContextLines=e.get("context.maxLines",100),this.cachedConfig.includeImports=e.get("context.includeImports",!0),this.cachedConfig.includeComments=e.get("context.includeComments",!0),this.cachedConfig.cacheEnabled=e.get("cache.enabled",!0),this.cachedConfig.retentionPeriodHours=e.get("cache.retentionPeriodHours",24),this.cachedConfig.maxSnippets=e.get("cache.maxSnippets",1e3),this.cachedConfig.enabledFileTypes=e.get("fileTypes.enabled",[".js",".ts",".jsx",".tsx",".py",".java",".c",".cpp",".cs",".go",".rs",".php",".rb",".html",".css",".md","*"]),this.cachedConfig.disabledFileTypes=e.get("fileTypes.disabled",[".txt",".log",".json",".yml",".yaml"]);const t=e.get("logging.level","error");if(this.cachedConfig.logLevel=this.parseLogLevel(t),this.cachedConfig.adaptToProjectSize=e.get("advanced.adaptToProjectSize",!0),this.cachedConfig.models=e.get("models",[]),0===this.cachedConfig.models.length&&(this.cachedConfig.models=[{title:"默认Ollama模型",model:"qwen2.5-coder:7b",provider:l.ModelProvider.OLLAMA,apiBase:"http://localhost:11434"}]),this.cachedConfig.selectedModelIndex=e.get("selectedModelIndex",0),this.cachedConfig.selectedModelName=e.get("model.selectedModelName",""),!this.cachedConfig.selectedModelName&&this.cachedConfig.models.length>0){const e=Math.min(this.cachedConfig.selectedModelIndex,this.cachedConfig.models.length-1);this.cachedConfig.selectedModelName=this.cachedConfig.models[e].title,this.logger.info(`未设置模型名称，使用索引 ${e} 对应的模型: ${this.cachedConfig.selectedModelName}`)}const n=this.cachedConfig.models.findIndex((e=>e.title===this.cachedConfig.selectedModelName));-1!==n?(this.cachedConfig.selectedModelIndex=n,this.logger.debug(`找到模型 "${this.cachedConfig.selectedModelName}" 的索引: ${n}`)):this.cachedConfig.models.length>0?(this.logger.warn(`未找到名为 "${this.cachedConfig.selectedModelName}" 的模型，使用第一个可用模型`),this.cachedConfig.selectedModelName=this.cachedConfig.models[0].title,this.cachedConfig.selectedModelIndex=0):this.logger.warn("没有可用的模型配置"),this.cachedConfig.selectedModelIndex>=this.cachedConfig.models.length&&(this.logger.warn(`模型索引 ${this.cachedConfig.selectedModelIndex} 超出范围，重置为0`),this.cachedConfig.selectedModelIndex=0,this.cachedConfig.models.length>0&&(this.cachedConfig.selectedModelName=this.cachedConfig.models[0].title)),this.logger.setLogLevel(this.cachedConfig.logLevel),this.logger.debug("配置已重新加载")}parseLogLevel(e){switch(e.toLowerCase()){case"debug":return a.LogLevel.DEBUG;case"info":return a.LogLevel.INFO;case"warn":return a.LogLevel.WARN;case"error":default:return a.LogLevel.ERROR;case"none":return a.LogLevel.NONE}}getLogLevel(){return this.cachedConfig.logLevel}async setLogLevel(e){const t=a.LogLevel[e].toLowerCase();await this.updateConfigValue("logging.level",t),this.logger.setLogLevel(e)}reloadConfig(){this.loadConfiguration()}async updateConfigValue(e,t,n=!0){const s=r.workspace.getConfiguration(this.configPrefix);await s.update(e,t,n),this.reloadConfig()}isEnabled(){return this.cachedConfig.enabled}async setEnabled(e){await this.updateConfigValue("general.enabled",e)}getTriggerDelay(){return this.cachedConfig.triggerDelay}getApiUrl(){const e=this.getSelectedModelConfig();return e.apiBase?e.apiBase:(this.logger.warn(`模型 ${e.title} 未设置API地址，使用默认地址`),"http://localhost:11434")}getModelName(){return this.getSelectedModelConfig().model}async setModelName(e){this.logger.warn("setModelName 方法已弃用，请使用 setSelectedModelName 代替");const t=this.cachedConfig.models.findIndex((t=>t.model===e));t>=0?await this.setSelectedModelIndex(t):this.logger.warn(`未找到模型: ${e}`)}getTemperature(){const e=this.cachedConfig.temperature;if(this.shouldAdaptToProjectSize()){const t=this.estimateProjectSize();if(this.logger.debug(`估计项目大小: ${t}`),"large"===t)return Math.max(.2,e-.05);if("small"===t)return Math.min(.7,e+.05)}return e}getMaxTokens(){const e=this.cachedConfig.maxTokens;if(this.shouldAdaptToProjectSize()){const t=this.estimateProjectSize();if("large"===t)return Math.min(500,e+100);if("small"===t)return e}return e}getMaxContextLines(){return this.cachedConfig.maxContextLines}shouldIncludeImports(){return this.cachedConfig.includeImports}shouldIncludeComments(){return this.cachedConfig.includeComments}isCacheEnabled(){return this.cachedConfig.cacheEnabled}getRetentionPeriodHours(){return this.cachedConfig.retentionPeriodHours}getMaxSnippets(){return this.cachedConfig.maxSnippets}getEnabledFileTypes(){const e=this.cachedConfig.enabledFileTypes;return Array.isArray(e)?e:"string"==typeof e?e.includes(",")?e.split(",").map((e=>e.trim())):[e]:["*"]}isFileExtApplicableForLanguage(e,t){return{javascript:[".js",".jsx"],typescript:[".ts",".tsx"],python:[".py",".pyw"],java:[".java"],csharp:[".cs"],cpp:[".cpp",".cc",".cxx",".h",".hpp"],c:[".c",".h"],go:[".go"],rust:[".rs"],php:[".php"],ruby:[".rb"],html:[".html",".htm"],css:[".css"],markdown:[".md"]}[t]?.includes(e)||!1}matchesFileTypePatterns(e,t){return t.some((t=>t===e||"*"===t||"all"===t||!(!t.endsWith("*")||!e.startsWith(t.slice(0,-1)))))}getDisabledFileTypes(){const e=this.cachedConfig.disabledFileTypes;return Array.isArray(e)?e:"string"==typeof e?e.includes(",")?e.split(",").map((e=>e.trim())):[e]:[".txt",".log"]}getFullConfig(){return{...this.cachedConfig}}isDebugEnabled(){return this.getLogLevel()===a.LogLevel.DEBUG}shouldAdaptToProjectSize(){return this.cachedConfig.adaptToProjectSize}estimateProjectSize(){try{const e=r.workspace.textDocuments.length;return e>20?"large":e>8?"medium":"small"}catch(e){return"medium"}}isAdaptToProjectSizeEnabled(){return this.cachedConfig.adaptToProjectSize}async setAdaptToProjectSize(e){this.logger.debug((e?"启用":"禁用")+"自适应项目大小功能"),await this.updateConfigValue("advanced.adaptToProjectSize",e)}getDebounceDelay(){return r.workspace.getConfiguration("tabAutoComplete").get("debounceDelay",300)}getPromptTemplate(){return r.workspace.getConfiguration("tabAutoComplete").get("prompt.template","你是一个智能代码补全助手。请根据以下上下文补全代码，只需要补全光标处的代码且只返回补全的代码，不要包含任何解释或注释，补全的内容不要包含上下文中已存在的重复的内容。\n\n上下文:\n```\n${prefix}\n```\n\n请直接补全代码:")}getSelectedModelConfig(){return 0===this.cachedConfig.models.length?{title:"默认Ollama模型",model:"qwen2.5-coder:7b",provider:l.ModelProvider.OLLAMA,apiBase:"http://localhost:11434"}:this.cachedConfig.models[this.cachedConfig.selectedModelIndex]}async setSelectedModelIndex(e){if(e>=0&&e<this.cachedConfig.models.length){await this.updateConfigValue("selectedModelIndex",e);const t=this.cachedConfig.models[e].title;await this.updateConfigValue("model.selectedModelName",t)}}getSelectedModelName(){return this.cachedConfig.selectedModelName}async setSelectedModelName(e){const t=this.cachedConfig.models.findIndex((t=>t.title===e));t>=0?(await this.updateConfigValue("model.selectedModelName",e),await this.updateConfigValue("selectedModelIndex",t)):this.cachedConfig.models.length>0&&(await this.updateConfigValue("model.selectedModelName",this.cachedConfig.models[0].title),await this.updateConfigValue("selectedModelIndex",0))}getAvailableModels(){return this.cachedConfig.models}async addModelConfig(e){const t=[...this.cachedConfig.models,e];await this.updateConfigValue("models",t)}async updateModelConfig(e,t){const n=[...this.cachedConfig.models];n[e]=t,await this.updateConfigValue("models",n)}async deleteModelConfig(e){const t=this.cachedConfig.models.filter(((t,n)=>n!==e));await this.updateConfigValue("models",t),e===this.cachedConfig.selectedModelIndex?await this.setSelectedModelIndex(0):e<this.cachedConfig.selectedModelIndex&&await this.setSelectedModelIndex(this.cachedConfig.selectedModelIndex-1)}dispose(){this.configChangeListener&&this.configChangeListener.dispose()}async setSelectedModelConfig(e){const t=this.cachedConfig.models.findIndex((t=>t.title===e.title&&t.model===e.model&&t.provider===e.provider));t>=0?await this.setSelectedModelIndex(t):(await this.addModelConfig(e),await this.setSelectedModelIndex(this.cachedConfig.models.length-1))}}},314:function(e,t,n){var s=this&&this.__createBinding||(Object.create?function(e,t,n,s){void 0===s&&(s=n),Object.defineProperty(e,s,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,s){void 0===s&&(s=n),e[s]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&s(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.CompletionProvider=void 0;const r=i(n(398)),a=n(92),l=n(827);t.CompletionProvider=class{constructor(e,t,n,s,o,i){this.isRegisteredFlag=!1,this.lastCompletionResult=null,this.lastContext="",this.lastPosition=null,this.errorsShown=new Set,this.abortControllers=new Map,this.lastShownCompletion=void 0,this.lastDecorator=null,this.lastInsertText=null,this.lastPreviewPosition=null,this.temporaryLines=0,this.originalPosition=null,this.configManager=e,this.logger=t,this.cacheManager=n,this.statusBarItem=s,this.diagnosticsCollection=o,this.clientFactory=new a.ClientFactory(e),this.client=this.clientFactory.createClient(e.getSelectedModelConfig()),r.workspace.onDidChangeConfiguration((e=>{(e.affectsConfiguration("tabAutoComplete.selectedModelIndex")||e.affectsConfiguration("tabAutoComplete.models"))&&this.updateClient()})),this.logger.debug("CompletionProvider 已初始化")}updateClient(){this.client=this.clientFactory.createClient(this.configManager.getSelectedModelConfig()),this.logger.debug("已更新API客户端")}onError(e){if(!["unexpected server status","operation was aborted"].some((t=>"string"==typeof e?e.includes(t):e?.message?.includes(t)))&&(this.logger.error("生成代码补全时出错",e),!this.errorsShown.has(e.message))){this.errorsShown.add(e.message);let t=["文档"];e.message.includes("Ollama可能未安装")?t.push("下载Ollama"):e.message.includes("Ollama可能未运行")&&(t=["启动Ollama"]),r.window.showErrorMessage(e.message,...t).then((e=>{"文档"===e?r.env.openExternal(r.Uri.parse("https://github.com/ollama/ollama")):"下载Ollama"===e?r.env.openExternal(r.Uri.parse("https://ollama.ai/download")):"启动Ollama"===e&&this.startOllama()}))}}async startOllama(){let e="";e="win32"===process.platform?"start ollama serve":"darwin"===process.platform?"open -a Ollama":"ollama serve";try{const t=r.window.createTerminal("Ollama");t.sendText(e),t.show(),this.logger.debug("已尝试启动Ollama服务"),r.window.showInformationMessage("正在尝试启动Ollama服务，请稍候..."),setTimeout((async()=>{(await this.client.testConnection()).success?r.window.showInformationMessage("Ollama服务已成功启动！"):r.window.showErrorMessage("Ollama服务启动失败，请手动启动Ollama。")}),5e3)}catch(e){this.logger.error("启动Ollama服务失败",e),r.window.showErrorMessage("启动Ollama服务失败，请手动启动Ollama。")}}cancel(){this.abortControllers.forEach((e=>{e.abort()})),this.abortControllers.clear()}createAbortController(e){const t=new AbortController;return this.abortControllers.set(e,t),t}deleteAbortController(e){this.abortControllers.delete(e)}async accept(e){this.logger.debug(`接受补全: ${e||"无ID"}`);try{const e=r.window.activeTextEditor;if(!e)return void this.logger.debug("没有活动的编辑器，无法接受补全");if(!this.lastInsertText||!this.originalPosition)return this.logger.debug("缺少必要的状态信息，无法接受补全"),void await this.clearPreview();const t=this.lastInsertText.split("\n"),n=new r.Position(this.originalPosition.line+t.length-1,t[t.length-1].length+(1===t.length?this.originalPosition.character:0)),s=new r.Range(this.originalPosition,n),o=this.lastInsertText;if(this.lastDecorator&&(this.lastDecorator.dispose(),this.lastDecorator=null),!await e.edit((e=>{e.delete(s),e.insert(this.originalPosition,o)})))return void this.logger.debug("编辑操作失败");if(e.document.isDirty&&await e.document.save(),this.configManager.isCacheEnabled()&&this.lastContext&&o){this.logger.debug("将已接受的补全内容保存到缓存");try{await this.cacheManager.put(this.lastContext,o)}catch(e){this.logger.debug(`保存补全内容到缓存时出错: ${e instanceof Error?e.message:String(e)}`)}}const i=new r.Position(this.originalPosition.line+t.length-1,t[t.length-1].length+(1===t.length?this.originalPosition.character:0));e.selection=new r.Selection(i,i),this.lastDecorator=null,this.lastInsertText=null,this.lastPreviewPosition=null,this.lastPosition=null,this.originalPosition=null,this.lastShownCompletion=null,this.logger.debug("补全内容已成功应用")}catch(e){this.logger.error("接受补全时出错",e),await this.clearPreview()}}markDisplayed(e,t){this.logger.debug(`标记补全已显示: ${e}`),t&&this.logger.debug(`补全长度: ${t.completion?.length||0}, 是否来自缓存: ${t.cacheHit||!1}`)}async applyCompletion(e,t,n){try{if(!n||0===n.trim().length)return void this.logger.debug("补全内容为空，不应用");let s=n;if(s.startsWith("```")){const e=s.match(/^```(\w+)\n/);s=e?s.substring(e[0].length):s.substring(3)}if(s.endsWith("```")&&(s=s.substring(0,s.length-3)),await e.edit((e=>{e.insert(t,s)}))){const n=s.split("\n"),o=n[n.length-1].length;let i;i=n.length>1?new r.Position(t.line+n.length-1,n.length>1?o:t.character+o):new r.Position(t.line,t.character+s.length),e.selection=new r.Selection(i,i),e.revealRange(new r.Range(i,i)),this.lastPosition=i}else this.logger.debug("应用补全内容失败，编辑操作返回false")}catch(e){throw this.logger.error("应用补全时出错",e),e}}getTriggerCharacters(){return[".","(","{","[",","," ","\n"]}async provideCompletionItems(e,t,n,s){try{if(this.logger.debug(`触发补全，类型: ${s.triggerKind}, 字符: ${s.triggerCharacter||"none"}`),!this.configManager.isEnabled())return this.logger.debug("代码补全功能已禁用，不提供补全"),null;if(!this.isFileTypeSupported(e))return this.logger.debug(`文件类型不支持: ${e.languageId}, 文件: ${e.fileName}`),null;if("vscode-scm"===e.uri.scheme)return this.logger.debug("SCM视图中不提供补全"),null;const o=r.window.activeTextEditor;if(o&&o.selections.length>1)return this.logger.debug("多光标模式下不提供补全"),null;const i=l.v4(),a=this.createAbortController(i),c=a.signal;this.logger.debug(`创建补全请求: ${i}`),n&&n.onCancellationRequested((()=>a.abort())),this.statusBarItem.text="$(sync~spin) 生成补全...",this.statusBarItem.tooltip="正在生成代码补全",this.statusBarItem.show();const g=Date.now(),h=this.collectContext(e,t);this.logger.debug(`收集上下文完成，前缀长度: ${h.prefix.length}, 后缀长度: ${h.suffix.length}`);let d=null,u=!1;if(this.configManager.isCacheEnabled()){this.logger.debug("缓存已启用，尝试从缓存获取补全");try{const e=await this.cacheManager.get(h.prefix);e?(d=e,u=!0,h.cacheHit=!0,this.logger.debug("使用缓存的补全结果")):this.logger.debug("缓存未命中")}catch(e){this.logger.debug(`从缓存获取补全时出错: ${e instanceof Error?e.message:String(e)}`)}}else this.logger.debug("缓存已禁用");if(d)d=this.processCompletionResult(d,h);else try{const e=this.preparePrompt(h);this.logger.debug(`准备提示完成，提示长度: ${e.length}`);const t=this.configManager.getSelectedModelConfig(),n=t.model,s=t.temperature||this.configManager.getTemperature(),o=t.maxTokens||this.configManager.getMaxTokens();if(this.logger.debug(`API配置: 提供商=${t.provider}, 模型=${n}, 温度=${s}, 最大token=${o}, API基础URL=${t.apiBase}`),this.logger.debug("开始调用模型生成补全"),d=await this.client.generateCompletion(e,{temperature:s,maxTokens:o,model:n},c),c.aborted)return this.logger.debug("补全请求被中止"),this.statusBarItem.text="$(code) 补全",this.statusBarItem.tooltip="Ollama代码补全",null;d?this.logger.debug(`模型生成补全成功，原始补全长度: ${d.length}`):this.logger.debug("模型返回空补全"),d=this.processCompletionResult(d,h),d?this.logger.debug(`处理后的补全长度: ${d.length}`):this.logger.debug("处理后补全为空"),this.configManager.isCacheEnabled()&&d&&(this.logger.debug("将补全结果保存到缓存"),await this.cacheManager.put(h.prefix,d))}catch(e){return c.aborted?(this.logger.debug("补全请求被中止"),this.statusBarItem.text="$(code) 补全",this.statusBarItem.tooltip="Ollama代码补全",null):(this.logger.error(`生成补全时出错: ${e instanceof Error?e.message:String(e)}`),this.onError(e),this.statusBarItem.text="$(code) 补全",this.statusBarItem.tooltip="Ollama代码补全",null)}if(!d)return this.logger.debug("没有生成补全内容，返回null"),this.statusBarItem.text="$(code) 补全",this.statusBarItem.tooltip="Ollama代码补全",null;this.lastCompletionResult=d,this.lastContext=h.prefix,this.lastPosition=t,this.logger.debug(`记录补全结果，长度: ${d.length}`);const p={time:Date.now()-g,completion:d,prefix:h.prefix,suffix:h.suffix,prompt:h.prompt,modelProvider:this.configManager.getSelectedModelConfig().provider,modelName:this.configManager.getSelectedModelConfig().model,cacheHit:u,filepath:e.uri.toString(),numLines:d.split("\n").length,completionId:i,timestamp:Date.now()};this.markDisplayed(i,p),this.lastShownCompletion=p;const f=new r.CompletionItem(d.split("\n")[0]+"...",r.CompletionItemKind.Snippet);return f.insertText=d,f.detail="基于上下文的AI补全",f.documentation=new r.MarkdownString("```"+e.languageId+"\n"+d+"\n```"),f.sortText="0",this.statusBarItem.text="TabAutocomplete",this.statusBarItem.tooltip="TabAutocomplete代码补全",this.logger.debug("成功创建补全项，返回补全结果"),await this.setPreview(d,t),[f]}catch(e){return this.logger.error(`provideCompletionItems方法出错: ${e instanceof Error?e.message:String(e)}`),this.onError(e),null}finally{this.statusBarItem.text="TabAutocomplete",this.statusBarItem.tooltip="TabAutocomplete代码补全"}}preparePrompt(e){return this.configManager.getPromptTemplate().replace("${prefix}",e.prefix+"TODO"+e.suffix+"\n从TODO这一行开始补全，不要返回上下文中重复的内容")}processCompletionResult(e,t){if(!e)return null;let n=e;if(this.logger.debug("补全的内容如下\n",n),n.startsWith("```")){const e=n.match(/^```(\w+)\n/);n=e?n.substring(e[0].length):n.substring(3)}n.endsWith("```")&&(n=n.substring(0,n.length-3)),n=n.replace(/^\n+|\n+$/g,"");const s=n.split("\n");if(1==s.length){const e=t.prefix.split("\n").pop()||"";if(n.endsWith(e))return this.logger.debug("跳过重复的单行补全内容"),null;n.includes(e)&&(n=n.substring(e.length),this.logger.debug("移除单行补全中的重复内容"));const s=e.trim().split(/\s+/),o=s[s.length-1];o&&n.trimStart().startsWith(o)&&(n=n.trimStart().substring(o.length).trimStart(),this.logger.debug(`移除重复的开头单词: ${o}`));let i=0;for(let t=1;t<=Math.min(e.length,n.length);t++)e.slice(-t)===n.slice(0,t)&&(i=t);i>0&&(n=n.slice(i),this.logger.debug(`移除重复的重叠部分，长度: ${i}`))}else{const e=(t.prefix+t.suffix).split("\n"),o=new Set;for(const t of e)o.add(t.trim());const i=t.prefix.split("\n").pop()||"",r=i.match(/^[\s\t]*/)?.[0]||"",a=i.trim().split(/\s+/),l=a[a.length-1];l&&s[0].trimStart().startsWith(l)&&(s[0]=s[0].trimStart().substring(l.length).trimStart(),this.logger.debug(`移除多行补全第一行中重复的开头单词: ${l}`));const c=[];for(let e=0;e<s.length;e++){const t=s[e];0===e?c.push(t):c.push(r+t)}if(0===c.length)return this.logger.debug("所有行都是重复的，跳过补全"),null;n=c.join("\n")}return n}collectContext(e,t){const n=e.getText(),s=e.offsetAt(t),o=this.configManager.getMaxContextLines();return{prefix:n.substring(-o,s),suffix:n.substring(s,o),prompt:"",imports:this.getImportStatements(e),language:e.languageId,lineCount:e.lineCount,fileName:e.fileName}}getImportStatements(e){const t=e.getText().split("\n"),n=[];let s;switch(e.languageId){case"javascript":case"typescript":case"javascriptreact":case"typescriptreact":s=/^(import|export)\s+.*/;break;case"python":s=/^(import|from)\s+.*/;break;case"java":case"kotlin":s=/^import\s+.*/;break;case"go":s=/^import\s+[\(\"].*[\)\"]$/;break;case"rust":s=/^(use|extern crate)\s+.*/;break;case"c":case"cpp":case"csharp":s=/^#include\s+.*/;break;case"php":s=/^(use|require|include|require_once|include_once)\s+.*/;break;case"ruby":s=/^(require|include|extend|load|autoload)\s+.*/;break;default:s=/^(import|export|require|include|use|from)\s+.*/}for(const e of t)s.test(e.trim())&&n.push(e);return n}isFileTypeSupported(e){try{const t=e.fileName,n=t.substring(t.lastIndexOf(".")),s=e.languageId,o=["javascript","typescript","python","java","c","cpp","csharp","go","rust","php","ruby","html","css"];if(this.logger.debug(`检查文件类型支持: 扩展名=${n}, 语言ID=${s}`),!this.configManager.isEnabled())return this.logger.debug("插件全局禁用"),!1;try{const e=this.configManager.getDisabledFileTypes(),t=Array.isArray(e)?e:[];if(t.includes(n)||t.includes(s))return this.logger.debug(`文件类型在禁用列表中: ${t.join(",")}`),!1}catch(e){this.logger.debug(`获取禁用类型时出错: ${e}`)}try{const e=this.configManager.getEnabledFileTypes(),t=Array.isArray(e)?e:[];if(this.logger.debug(`启用类型: ${JSON.stringify(t)}`),t.includes("*")||t.includes("all"))return this.logger.debug("支持所有文件类型"),!0;if(t.includes(n)||t.includes(s))return this.logger.debug(`文件类型明确启用: ${n} 或 ${s}`),!0;if(o.includes(s))return this.logger.debug(`常见编程语言自动支持: ${s}`),!0}catch(e){if(this.logger.debug(`获取启用类型时出错: ${e}`),o.includes(s))return!0}return this.logger.debug(`文件类型不支持: ${s}, ${n}`),!1}catch(e){return this.logger.error(`检查文件类型支持时出错: ${e}`),!1}}isRegistered(){return this.isRegisteredFlag}setRegistered(e){this.isRegisteredFlag=e}dispose(){this.cancel(),this.logger.debug("CompletionProvider 已释放")}setLastDecorator(e){this.clearPreview(),this.lastDecorator=e}setLastInsertText(e){this.lastInsertText=e}setLastPosition(e){this.lastPosition=e}setLastPreviewPosition(e){this.lastPreviewPosition=e}getLastInsertText(){return this.lastInsertText}getLastPosition(){return this.lastPosition}hasActivePreview(){const e=null!==this.lastDecorator,t=null!==this.lastInsertText&&this.lastInsertText.length>0,n=null!==this.lastPosition,s=null!==this.lastPreviewPosition,o=r.window.activeTextEditor;return e&&t&&n&&s&&void 0!==o}async clearPreview(){if(null!=this.lastDecorator){try{const e=r.window.activeTextEditor;if(this.lastDecorator&&(this.lastDecorator.dispose(),this.lastDecorator=null),this.lastInsertText&&e&&this.originalPosition){const t=this.lastInsertText.split("\n"),n=new r.Position(this.originalPosition.line+t.length-1,t[t.length-1].length+(1===t.length?this.originalPosition.character:0));await e.edit((e=>{const t=new r.Range(this.originalPosition,n);e.delete(t)}))}}catch(e){this.logger.error("清除预览时出错",e)}this.lastDecorator=null,this.lastInsertText=null,this.lastPreviewPosition=null,this.lastPosition=null,this.originalPosition=null}}async setPreview(e,t){try{const n=r.window.activeTextEditor;if(!n)return;await this.clearPreview(),await new Promise((e=>setTimeout(e,50)));const s=e.split("\n");this.lastDecorator=r.window.createTextEditorDecorationType({opacity:"0.6"}),await n.edit((n=>{n.insert(t,e)}));const o=new r.Position(t.line+s.length-1,s[s.length-1].length+(1===s.length?t.character:0)),i=new r.Range(t,o);n.setDecorations(this.lastDecorator,[{range:i}]),this.lastInsertText=e,this.lastPosition=t,this.lastPreviewPosition=t,this.originalPosition=t,n.selection=new r.Selection(t,t),n.revealRange(new r.Range(t,t)),this.logger.debug(`预览已设置，直接插入了${s.length}行内容`)}catch(e){this.logger.error("设置预览时出错",e),await this.clearPreview()}}getLastDecorator(){return this.lastDecorator}getLastPreviewPosition(){return this.lastPreviewPosition}}},332:function(e,t,n){var s=this&&this.__createBinding||(Object.create?function(e,t,n,s){void 0===s&&(s=n),Object.defineProperty(e,s,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,s){void 0===s&&(s=n),e[s]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&s(t,e,n);return o(t,e),t},r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.CacheManager=void 0;const a=i(n(398)),l=r(n(749)),c=n(628),g=n(135);class h{constructor(e,t){this.storage=e,this.configManager=t,this.codeSnippets=[],this.logger=c.Logger.getInstance(),this.lruCache=new l.default({max:this.configManager.getMaxSnippets(),maxAge:60*this.configManager.getRetentionPeriodHours()*60*1e3}),this.logger.debug(`初始化缓存管理器, 最大条目数: ${this.configManager.getMaxSnippets()}, 保留时间: ${this.configManager.getRetentionPeriodHours()}小时`),this.loadCache()}loadCache(){this.logger.debug("从存储中加载缓存");const e=this.storage.get(h.CACHE_KEY,[]);if(e&&e.length){this.codeSnippets=e;for(const e of this.codeSnippets)this.lruCache.set(e.id,e);this.logger.debug(`已加载 ${this.codeSnippets.length} 个缓存的代码片段`),this.cleanExpiredCache()}else this.logger.debug("没有找到缓存的代码片段")}cleanExpiredCache(){this.logger.debug("清理过期的缓存片段");const e=Date.now(),t=60*this.configManager.getRetentionPeriodHours()*60*1e3;let n=0;this.codeSnippets=this.codeSnippets.filter((s=>{const o=e-s.timestamp>t;return o&&(n++,this.lruCache.del(s.id)),!o})),n>0&&(this.logger.debug(`已清理 ${n} 个过期的缓存片段`),this.saveCache())}saveCache(){this.logger.debug(`保存 ${this.codeSnippets.length} 个代码片段到存储`),this.storage.update(h.CACHE_KEY,this.codeSnippets)}cacheDocumentChanges(e){if(this.configManager.isCacheEnabled()&&this.isSignificantChange(e.contentChanges)){this.logger.debug(`处理文档变更: ${e.document.fileName}`);try{for(const t of e.contentChanges){const n=t.range,s=this.extractContext(e.document,n);if(!s)continue;const o=e.document.languageId,i=t.text;if(i.length<10){this.logger.debug("代码片段过短，忽略");continue}const r=this.extractTags(i,s,o);if(0===r.length){this.logger.debug("无法提取标签，忽略代码片段");continue}const a={id:`${Date.now()}-${Math.random().toString(36).substr(2,9)}`,code:i,language:o,timestamp:Date.now(),context:s,filePath:e.document.fileName,metadata:{tags:r,frequency:1}};this.addSnippet(a),this.logger.debug(`缓存了新的代码片段，ID: ${a.id}, 语言: ${o}, 标签: ${r.join(", ")}`)}}catch(e){this.logger.error(`缓存文档变更时出错: ${e instanceof Error?e.message:String(e)}`)}}}isSignificantChange(e){for(const t of e)if(t.text.trim().length>3)return!0;return!1}extractContext(e,t){let n=Math.max(0,t.start.line-10),s=Math.min(e.lineCount-1,t.end.line+5);const o=new a.Range(new a.Position(n,0),new a.Position(s,e.lineAt(s).text.length));return e.getText(o)}extractTags(e,t,n){const s=[];switch(n){case"javascript":case"typescript":this.extractJavaScriptTags(e,t,s);break;case"python":this.extractPythonTags(e,t,s);break;default:this.extractGenericTags(e,t,s)}return this.logger.debug(`提取的标签: ${s.join(", ")}`),s}extractJavaScriptTags(e,t,n){const s=/function\s+([a-zA-Z0-9_]+)\s*\(/g,o=/class\s+([a-zA-Z0-9_]+)\s*/g,i=/const\s+([a-zA-Z0-9_]+)\s*=/g,r=/let\s+([a-zA-Z0-9_]+)\s*=/g;let a;for(;null!==(a=s.exec(t));)a[1]&&!n.includes(a[1])&&n.push(a[1]);for(;null!==(a=o.exec(t));)a[1]&&!n.includes(a[1])&&n.push(a[1]);for(;null!==(a=i.exec(t));)a[1]&&!n.includes(a[1])&&n.push(a[1]);for(;null!==(a=r.exec(t));)a[1]&&!n.includes(a[1])&&n.push(a[1])}extractPythonTags(e,t,n){const s=/def\s+([a-zA-Z0-9_]+)\s*\(/g,o=/class\s+([a-zA-Z0-9_]+)\s*\(?/g;let i;for(;null!==(i=s.exec(t));)i[1]&&!n.includes(i[1])&&n.push(i[1]);for(;null!==(i=o.exec(t));)i[1]&&!n.includes(i[1])&&n.push(i[1])}extractGenericTags(e,t,n){const s=/\b([a-zA-Z][a-zA-Z0-9_]{2,})\b/g;let o;const i=new Set;for(;null!==(o=s.exec(t));)o[1]&&!i.has(o[1])&&(i.add(o[1]),o[1].length>3&&!this.isCommonKeyword(o[1])&&n.push(o[1]))}isCommonKeyword(e){return["function","class","const","let","var","if","else","for","while","return","import","export","from","async","await","try","catch","switch","case","break","default","continue","new","this","super","extends","implements","interface","typeof","instanceof"].includes(e.toLowerCase())}addSnippet(e){const t=this.findSimilarSnippet(e);if(t){this.logger.debug("找到类似的片段，更新而不是添加新的"),t.timestamp=Date.now(),t.metadata.frequency++;for(const n of e.metadata.tags)t.metadata.tags.includes(n)||t.metadata.tags.push(n)}else this.codeSnippets.push(e),this.lruCache.set(e.id,e),this.logger.debug(`添加新片段到缓存，当前缓存大小: ${this.codeSnippets.length}`);this.saveCache()}findSimilarSnippet(e){for(const t of this.codeSnippets)if(t.language===e.language&&this.calculateSimilarity(t.code,e.code)>.8)return t}calculateSimilarity(e,t){const n=g.calculateLevenshteinDistance(e,t),s=Math.max(e.length,t.length);return 0===s?1:1-n/s}findRelevantCode(e,t,n=3){this.logger.debug(`查找相关代码，语言: ${t}`);const s=Date.now();if(0===this.codeSnippets.length)return this.logger.debug("缓存为空，没有找到相关代码"),[];const o=e,i=this.extractTags(e,o,t);if(0===i.length)return this.logger.debug("无法从当前代码提取标签，无法找到相关代码"),[];this.logger.debug(`当前代码标签: ${i.join(", ")}`);const r=this.codeSnippets.filter((e=>e.language===t)).map((t=>({snippet:t,score:this.calculateRelevanceScore(t,i,e)}))).filter((e=>e.score>0)).sort(((e,t)=>t.score-e.score)).slice(0,n),a=r.map((e=>e.snippet.code)),l=Date.now()-s;return this.logger.debug(`找到 ${a.length} 个相关代码片段，耗时: ${l}ms`),a.length>0&&this.logger.debug(`最佳匹配得分: ${r[0].score.toFixed(2)}`),a}calculateRelevanceScore(e,t,n){let s=0;for(const n of t)e.metadata.tags.includes(n)&&(s+=.2);s+=.3*this.calculateSimilarity(e.code,n),s+=Math.min(e.metadata.frequency/10,.3);const o=(Date.now()-e.timestamp)/36e5;return s+=Math.max(0,.2-o/240*.2),s}clearCache(){this.logger.debug("清空所有缓存的代码片段"),this.codeSnippets=[],this.lruCache.reset(),this.saveCache()}getStats(){const e={};for(const t of this.codeSnippets)e[t.language]||(e[t.language]=0),e[t.language]++;return{snippetCount:this.codeSnippets.length,languageStats:e}}async get(e){if(!this.configManager.isCacheEnabled())return;this.logger.debug(`尝试从缓存中获取补全内容，前缀长度: ${e.length}`);const t=this.hashString(e),n=this.lruCache.get(t);if(n)return this.logger.debug("缓存命中，返回缓存的补全内容"),n.code;this.logger.debug("缓存未命中")}async put(e,t){if(!this.configManager.isCacheEnabled()||!t||0===t.trim().length)return;this.logger.debug(`将补全内容存储到缓存中，前缀长度: ${e.length}, 补全长度: ${t.length}`);const n=this.hashString(e),s={id:n,code:t,language:"unknown",timestamp:Date.now(),context:e.slice(-200),filePath:"",metadata:{tags:[],frequency:1}};this.lruCache.set(n,s);const o=this.codeSnippets.findIndex((e=>e.id===n));o>=0?this.codeSnippets[o]=s:this.codeSnippets.push(s),this.saveCache()}hashString(e){let t=0;for(let n=0;n<e.length;n++)t=(t<<5)-t+e.charCodeAt(n),t|=0;return`hash_${Math.abs(t).toString(16)}`}}t.CacheManager=h,h.CACHE_KEY="ollamaCodeCompletionCache"},355:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0});const s=n(982);t.default=function(e){return Array.isArray(e)?e=Buffer.from(e):"string"==typeof e&&(e=Buffer.from(e,"utf8")),(0,s.createHash)("md5").update(e).digest()}},373:(e,t)=>{var n;Object.defineProperty(t,"__esModule",{value:!0}),t.ModelProvider=void 0,(n=t.ModelProvider||(t.ModelProvider={})).OLLAMA="ollama",n.DEEPSEEK="deepseek",n.OPENAI="openai",n.SILICONFLOW="siliconflow"},398:e=>{e.exports=require("vscode")},412:function(e,t,n){var s=this&&this.__createBinding||(Object.create?function(e,t,n,s){void 0===s&&(s=n),Object.defineProperty(e,s,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,s){void 0===s&&(s=n),e[s]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&s(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.StatusBarManager=void 0;const r=i(n(398));t.StatusBarManager=class{constructor(e){this.configManager=e,this.statusBarItem=r.window.createStatusBarItem(r.StatusBarAlignment.Right,100),this.statusBarItem.command="tabAutoComplete.toggleEnabled",this.updateStatus(),this.statusBarItem.show()}updateStatus(){const e=this.configManager.isEnabled();this.statusBarItem.text=e?"$(sparkle) TabAutoComplete":"$(stop) TabAutoComplete",this.statusBarItem.tooltip=e?"TabAutoComplete已启用 (点击禁用)":"TabAutoComplete已禁用 (点击启用)"}getStatusBarItem(){return this.statusBarItem}showTemporaryMessage(e,t=3e3){const n=this.statusBarItem.text,s=this.statusBarItem.tooltip,o=this.statusBarItem.backgroundColor;this.statusBarItem.text=`$(info) ${e}`,this.statusBarItem.tooltip=e,setTimeout((()=>{this.statusBarItem.text=n,this.statusBarItem.tooltip=s,this.statusBarItem.backgroundColor=o}),t)}showRequestInProgress(e){e?(this.statusBarItem.text="$(sync~spin) TabAutoComplete 请求中...",this.statusBarItem.tooltip="正在发送请求"):this.updateStatus()}showError(e){this.statusBarItem.text="$(error) TabAutoComplete 错误",this.statusBarItem.tooltip=e,this.statusBarItem.backgroundColor=new r.ThemeColor("statusBarItem.errorBackground"),setTimeout((()=>{this.updateStatus()}),5e3)}async toggleEnabled(){const e=this.configManager.isEnabled();await this.configManager.setEnabled(!e),this.updateStatus(),r.window.showInformationMessage(e?"TabAutoComplete已禁用":"TabAutoComplete已启用")}dispose(){this.statusBarItem.dispose()}}},458:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.updateV1State=void 0;const s=n(942),o=n(202),i={};function r(e,t,n){return e.msecs??=-1/0,e.nsecs??=0,t===e.msecs?(e.nsecs++,e.nsecs>=1e4&&(e.node=void 0,e.nsecs=0)):t>e.msecs?e.nsecs=0:t<e.msecs&&(e.node=void 0),e.node||(e.node=n.slice(10,16),e.node[0]|=1,e.clockseq=16383&(n[8]<<8|n[9])),e.msecs=t,e}function a(e,t,n,s,o,i,r=0){if(e.length<16)throw new Error("Random bytes length must be >= 16");if(i){if(r<0||r+16>i.length)throw new RangeError(`UUID byte range ${r}:${r+15} is out of buffer bounds`)}else i=new Uint8Array(16),r=0;t??=Date.now(),n??=0,s??=16383&(e[8]<<8|e[9]),o??=e.slice(10,16);const a=(1e4*(268435455&(t+=122192928e5))+n)%4294967296;i[r++]=a>>>24&255,i[r++]=a>>>16&255,i[r++]=a>>>8&255,i[r++]=255&a;const l=t/4294967296*1e4&268435455;i[r++]=l>>>8&255,i[r++]=255&l,i[r++]=l>>>24&15|16,i[r++]=l>>>16&255,i[r++]=s>>>8|128,i[r++]=255&s;for(let e=0;e<6;++e)i[r++]=o[e];return i}t.updateV1State=r,t.default=function(e,t,n){let l;const c=e?._v6??!1;if(e){const t=Object.keys(e);1===t.length&&"_v6"===t[0]&&(e=void 0)}if(e)l=a(e.random??e.rng?.()??(0,s.default)(),e.msecs,e.nsecs,e.clockseq,e.node,t,n);else{const e=Date.now(),o=(0,s.default)();r(i,e,o),l=a(o,i.msecs,i.nsecs,c?void 0:i.clockseq,c?void 0:i.node,t,n)}return t??(0,o.unsafeStringify)(l)}},498:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.OpenAIClient=void 0;const s=n(628);t.OpenAIClient=class{constructor(e,t){if(this.configManager=e,this.DEFAULT_API_BASE="https://api.openai.com/v1",this.logger=s.Logger.getInstance(),this.modelConfig=t,this.modelConfig.apiBase||(this.modelConfig.apiBase=this.DEFAULT_API_BASE),!this.modelConfig.apiKey)throw new Error("OpenAI API需要API密钥")}async getCompletion(e){try{const t=this.buildPrompt(e);this.configManager.isDebugEnabled()?this.logger.debug(`完整提示词:\n${t}`):this.logger.debug(`提示词前100个字符: ${t.substring(0,100)}...`);const n=this.modelConfig.temperature||this.configManager.getTemperature(),s=this.modelConfig.maxTokens||this.configManager.getMaxTokens(),o={model:this.modelConfig.model,messages:[{role:"user",content:t}],temperature:n,max_tokens:s};this.logger.debug(`发送请求到 OpenAI API: ${this.modelConfig.apiBase}/chat/completions`);const i=await fetch(`${this.modelConfig.apiBase}/chat/completions`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.modelConfig.apiKey}`},body:JSON.stringify(o)});if(!i.ok){const e=await i.text();return this.logger.error(`API请求失败: ${i.status} ${i.statusText} - ${e}`),null}const r=await i.json(),a=r.choices[0]?.message?.content;return a?this.processCompletionResult(a,e):(this.logger.error("API响应中没有找到补全文本"),null)}catch(e){return this.logger.error(`获取补全时出错: ${e}`),null}}async testConnection(){this.logger.info("测试与 OpenAI API 的连接");try{const e=await fetch(`${this.modelConfig.apiBase}/models`,{method:"GET",headers:{Authorization:`Bearer ${this.modelConfig.apiKey}`}});if(!e.ok){const t=await e.text();return{success:!1,message:`连接失败: ${e.status} ${e.statusText} - ${t}`}}return{success:!0,message:"连接成功",models:(await e.json()).data.map((e=>e.id))}}catch(e){return{success:!1,message:`连接失败: ${e}`}}}async generateCompletion(e,t,n){try{const s=t.model||this.modelConfig.model,o=void 0!==t.temperature?t.temperature:this.modelConfig.temperature||this.configManager.getTemperature(),i=t.maxTokens||this.modelConfig.maxTokens||this.configManager.getMaxTokens();this.logger.debug(`生成补全: 模型=${s}, 温度=${o}, 最大令牌数=${i}`);const r={model:s,messages:[{role:"user",content:e}],temperature:o,max_tokens:i},a=n?void 0:new AbortController,l=n||a?.signal,c=await fetch(`${this.modelConfig.apiBase}/chat/completions`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.modelConfig.apiKey}`},body:JSON.stringify(r),signal:l});if(!c.ok){const e=await c.text();return this.logger.error(`API请求失败: ${c.status} ${c.statusText} - ${e}`),null}const g=await c.json(),h=g.choices[0]?.message?.content;return h||(this.logger.error("API响应中没有找到补全文本"),null)}catch(e){return"AbortError"===e.name?(this.logger.info("请求被中止"),null):(this.logger.error(`生成补全时出错: ${e}`),null)}}buildPrompt(e){return this.configManager.getPromptTemplate().replace("${prefix}",e.prefix)}processCompletionResult(e,t){if(!e)return null;let n=e;const s=n.match(/```(?:\w*\n)?([\s\S]*?)```/);return s&&s[1]&&(n=s[1].trim()),n}}},502:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.URL=t.DNS=void 0;const s=n(766),o=n(157);var i=n(157);function r(e,t,n,i){return(0,o.default)(80,s.default,e,t,n,i)}Object.defineProperty(t,"DNS",{enumerable:!0,get:function(){return i.DNS}}),Object.defineProperty(t,"URL",{enumerable:!0,get:function(){return i.URL}}),r.DNS=o.DNS,r.URL=o.URL,t.default=r},508:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.updateV7State=void 0;const s=n(942),o=n(202),i={};function r(e,t,n){return e.msecs??=-1/0,e.seq??=0,t>e.msecs?(e.seq=n[6]<<23|n[7]<<16|n[8]<<8|n[9],e.msecs=t):(e.seq=e.seq+1|0,0===e.seq&&e.msecs++),e}function a(e,t,n,s,o=0){if(e.length<16)throw new Error("Random bytes length must be >= 16");if(s){if(o<0||o+16>s.length)throw new RangeError(`UUID byte range ${o}:${o+15} is out of buffer bounds`)}else s=new Uint8Array(16),o=0;return t??=Date.now(),n??=127*e[6]<<24|e[7]<<16|e[8]<<8|e[9],s[o++]=t/1099511627776&255,s[o++]=t/4294967296&255,s[o++]=t/16777216&255,s[o++]=t/65536&255,s[o++]=t/256&255,s[o++]=255&t,s[o++]=112|n>>>28&15,s[o++]=n>>>20&255,s[o++]=128|n>>>14&63,s[o++]=n>>>6&255,s[o++]=n<<2&255|3&e[10],s[o++]=e[11],s[o++]=e[12],s[o++]=e[13],s[o++]=e[14],s[o++]=e[15],s}t.updateV7State=r,t.default=function(e,t,n){let l;if(e)l=a(e.random??e.rng?.()??(0,s.default)(),e.msecs,e.seq,t,n);else{const e=Date.now(),o=(0,s.default)();r(i,e,o),l=a(o,i.msecs,i.seq,t,n)}return t??(0,o.unsafeStringify)(l)}},524:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0});const s=n(873);t.default=function(e){if(!(0,s.default)(e))throw TypeError("Invalid UUID");let t;return Uint8Array.of((t=parseInt(e.slice(0,8),16))>>>24,t>>>16&255,t>>>8&255,255&t,(t=parseInt(e.slice(9,13),16))>>>8,255&t,(t=parseInt(e.slice(14,18),16))>>>8,255&t,(t=parseInt(e.slice(19,23),16))>>>8,255&t,(t=parseInt(e.slice(24,36),16))/1099511627776&255,t/4294967296&255,t>>>24&255,t>>>16&255,t>>>8&255,255&t)}},547:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0});const s=n(873);t.default=function(e){if(!(0,s.default)(e))throw TypeError("Invalid UUID");return parseInt(e.slice(14,15),16)}},588:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default="00000000-0000-0000-0000-000000000000"},596:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i},597:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0});const s=n(152),o=n(942),i=n(202);t.default=function(e,t,n){if(s.default.randomUUID&&!t&&!e)return s.default.randomUUID();const r=(e=e||{}).random??e.rng?.()??(0,o.default)();if(r.length<16)throw new Error("Random bytes length must be >= 16");if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,t){if((n=n||0)<0||n+16>t.length)throw new RangeError(`UUID byte range ${n}:${n+15} is out of buffer bounds`);for(let e=0;e<16;++e)t[n+e]=r[e];return t}return(0,i.unsafeStringify)(r)}},609:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default="ffffffff-ffff-ffff-ffff-ffffffffffff"},628:function(e,t,n){var s=this&&this.__createBinding||(Object.create?function(e,t,n,s){void 0===s&&(s=n),Object.defineProperty(e,s,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,s){void 0===s&&(s=n),e[s]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&s(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.Logger=t.LogLevel=void 0;const r=i(n(398));var a;!function(e){e[e.NONE=0]="NONE",e[e.DEBUG=1]="DEBUG",e[e.INFO=2]="INFO",e[e.WARN=3]="WARN",e[e.ERROR=4]="ERROR"}(a=t.LogLevel||(t.LogLevel={}));class l{constructor(){this.logLevel=a.NONE,this.debugEnabled=!1,this.outputChannel=r.window.createOutputChannel("TabAutoComplete")}static getInstance(){return l.instance||(l.instance=new l),l.instance}setLogLevel(e){this.logLevel=e,this.log(a.INFO,`日志级别已设置为: ${a[e]}`)}shouldLog(e){return!(e!==a.DEBUG||!this.debugEnabled)||this.logLevel!==a.NONE&&e<=this.logLevel}formatMessage(e,t,n){let s=`[${(new Date).toISOString()}] [${a[e].padEnd(5)}] ${t}`;if(n)if(n instanceof Error)s+=`\n    ${n.stack||n.message}`;else if("object"==typeof n)try{s+=`\n    ${JSON.stringify(n,null,2)}`}catch(e){s+="\n    [无法序列化的对象]"}else s+=`\n    ${n}`;return s}log(e,t,n){if(!(e<this.logLevel)&&(this.shouldLog(e)||e===a.ERROR||e===a.WARN)){const s=this.formatMessage(e,t,n);this.outputChannel.appendLine(s),e===a.ERROR?console.error(s):e===a.WARN&&console.warn(s)}}debug(e,t){this.log(a.DEBUG,e,t)}info(e,t){this.log(a.INFO,e,t)}warn(e,t){this.log(a.WARN,e,t),this.shouldLog(a.WARN)&&(r.window.showWarningMessage(e),this.outputChannel.show(!0))}error(e,t){this.log(a.ERROR,e,t),r.window.showErrorMessage(e),this.outputChannel.show(!0)}setDebugEnabled(e){this.debugEnabled=e,this.log(a.INFO,"调试模式已"+(e?"启用":"禁用"))}showOutputChannel(){this.outputChannel.show()}dispose(){this.outputChannel.dispose()}}t.Logger=l},642:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DeepSeekClient=void 0;const s=n(628);t.DeepSeekClient=class{constructor(e,t){if(this.configManager=e,this.DEFAULT_API_BASE="https://api.deepseek.com/v1",this.logger=s.Logger.getInstance(),this.modelConfig=t,this.modelConfig.apiBase||(this.modelConfig.apiBase=this.DEFAULT_API_BASE),!this.modelConfig.apiKey)throw new Error("DeepSeek API需要API密钥")}async getCompletion(e){try{const t=this.buildPrompt(e);this.configManager.isDebugEnabled()?this.logger.debug(`完整提示词:\n${t}`):this.logger.debug(`提示词前100个字符: ${t.substring(0,100)}...`);const n=this.modelConfig.temperature||this.configManager.getTemperature(),s=this.modelConfig.maxTokens||this.configManager.getMaxTokens(),o={model:this.modelConfig.model,messages:[{role:"user",content:t}],temperature:n,max_tokens:s};this.logger.debug(`发送请求到 DeepSeek API: ${this.modelConfig.apiBase}/chat/completions`);const i=await fetch(`${this.modelConfig.apiBase}/chat/completions`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.modelConfig.apiKey}`},body:JSON.stringify(o)});if(!i.ok){const e=await i.text();return this.logger.error(`API请求失败: ${i.status} ${i.statusText} - ${e}`),null}const r=await i.json(),a=r.choices[0]?.message?.content;return a?this.processCompletionResult(a,e):(this.logger.error("API响应中没有找到补全文本"),null)}catch(e){return this.logger.error(`获取补全时出错: ${e}`),null}}async testConnection(){this.logger.info("测试与 DeepSeek API 的连接");try{const e=await fetch(`${this.modelConfig.apiBase}/models`,{method:"GET",headers:{Authorization:`Bearer ${this.modelConfig.apiKey}`}});if(!e.ok){const t=await e.text();return{success:!1,message:`连接失败: ${e.status} ${e.statusText} - ${t}`}}return{success:!0,message:"连接成功",models:(await e.json()).data.map((e=>e.id))}}catch(e){return{success:!1,message:`连接失败: ${e}`}}}async generateCompletion(e,t,n){try{const s=t.model||this.modelConfig.model,o=void 0!==t.temperature?t.temperature:this.modelConfig.temperature||this.configManager.getTemperature(),i=t.maxTokens||this.modelConfig.maxTokens||this.configManager.getMaxTokens();this.logger.debug(`生成补全: 模型=${s}, 温度=${o}, 最大令牌数=${i}`);const r={model:s,messages:[{role:"user",content:e}],temperature:o,max_tokens:i},a=n?void 0:new AbortController,l=n||a?.signal,c=await fetch(`${this.modelConfig.apiBase}/chat/completions`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.modelConfig.apiKey}`},body:JSON.stringify(r),signal:l});if(!c.ok){const e=await c.text();return this.logger.error(`API请求失败: ${c.status} ${c.statusText} - ${e}`),null}const g=await c.json(),h=g.choices[0]?.message?.content;return h||(this.logger.error("API响应中没有找到补全文本"),null)}catch(e){return"AbortError"===e.name?(this.logger.info("请求被中止"),null):(this.logger.error(`生成补全时出错: ${e}`),null)}}buildPrompt(e){return this.configManager.getPromptTemplate().replace("${prefix}",e.prefix)}processCompletionResult(e,t){if(!e)return null;let n=e;const s=n.match(/```(?:\w*\n)?([\s\S]*?)```/);return s&&s[1]&&(n=s[1].trim()),n}}},749:(e,t,n)=>{const s=n(799),o=Symbol("max"),i=Symbol("length"),r=Symbol("lengthCalculator"),a=Symbol("allowStale"),l=Symbol("maxAge"),c=Symbol("dispose"),g=Symbol("noDisposeOnSet"),h=Symbol("lruList"),d=Symbol("cache"),u=Symbol("updateAgeOnGet"),p=()=>1,f=(e,t,n)=>{const s=e[d].get(t);if(s){const t=s.value;if(m(e,t)){if(w(e,s),!e[a])return}else n&&(e[u]&&(s.value.now=Date.now()),e[h].unshiftNode(s));return t.value}},m=(e,t)=>{if(!t||!t.maxAge&&!e[l])return!1;const n=Date.now()-t.now;return t.maxAge?n>t.maxAge:e[l]&&n>e[l]},b=e=>{if(e[i]>e[o])for(let t=e[h].tail;e[i]>e[o]&&null!==t;){const n=t.prev;w(e,t),t=n}},w=(e,t)=>{if(t){const n=t.value;e[c]&&e[c](n.key,n.value),e[i]-=n.length,e[d].delete(n.key),e[h].removeNode(t)}};class v{constructor(e,t,n,s,o){this.key=e,this.value=t,this.length=n,this.now=s,this.maxAge=o||0}}const y=(e,t,n,s)=>{let o=n.value;m(e,o)&&(w(e,n),e[a]||(o=void 0)),o&&t.call(s,o.value,o.key,e)};e.exports=class{constructor(e){if("number"==typeof e&&(e={max:e}),e||(e={}),e.max&&("number"!=typeof e.max||e.max<0))throw new TypeError("max must be a non-negative number");this[o]=e.max||1/0;const t=e.length||p;if(this[r]="function"!=typeof t?p:t,this[a]=e.stale||!1,e.maxAge&&"number"!=typeof e.maxAge)throw new TypeError("maxAge must be a number");this[l]=e.maxAge||0,this[c]=e.dispose,this[g]=e.noDisposeOnSet||!1,this[u]=e.updateAgeOnGet||!1,this.reset()}set max(e){if("number"!=typeof e||e<0)throw new TypeError("max must be a non-negative number");this[o]=e||1/0,b(this)}get max(){return this[o]}set allowStale(e){this[a]=!!e}get allowStale(){return this[a]}set maxAge(e){if("number"!=typeof e)throw new TypeError("maxAge must be a non-negative number");this[l]=e,b(this)}get maxAge(){return this[l]}set lengthCalculator(e){"function"!=typeof e&&(e=p),e!==this[r]&&(this[r]=e,this[i]=0,this[h].forEach((e=>{e.length=this[r](e.value,e.key),this[i]+=e.length}))),b(this)}get lengthCalculator(){return this[r]}get length(){return this[i]}get itemCount(){return this[h].length}rforEach(e,t){t=t||this;for(let n=this[h].tail;null!==n;){const s=n.prev;y(this,e,n,t),n=s}}forEach(e,t){t=t||this;for(let n=this[h].head;null!==n;){const s=n.next;y(this,e,n,t),n=s}}keys(){return this[h].toArray().map((e=>e.key))}values(){return this[h].toArray().map((e=>e.value))}reset(){this[c]&&this[h]&&this[h].length&&this[h].forEach((e=>this[c](e.key,e.value))),this[d]=new Map,this[h]=new s,this[i]=0}dump(){return this[h].map((e=>!m(this,e)&&{k:e.key,v:e.value,e:e.now+(e.maxAge||0)})).toArray().filter((e=>e))}dumpLru(){return this[h]}set(e,t,n){if((n=n||this[l])&&"number"!=typeof n)throw new TypeError("maxAge must be a number");const s=n?Date.now():0,a=this[r](t,e);if(this[d].has(e)){if(a>this[o])return w(this,this[d].get(e)),!1;const r=this[d].get(e).value;return this[c]&&(this[g]||this[c](e,r.value)),r.now=s,r.maxAge=n,r.value=t,this[i]+=a-r.length,r.length=a,this.get(e),b(this),!0}const u=new v(e,t,a,s,n);return u.length>this[o]?(this[c]&&this[c](e,t),!1):(this[i]+=u.length,this[h].unshift(u),this[d].set(e,this[h].head),b(this),!0)}has(e){if(!this[d].has(e))return!1;const t=this[d].get(e).value;return!m(this,t)}get(e){return f(this,e,!0)}peek(e){return f(this,e,!1)}pop(){const e=this[h].tail;return e?(w(this,e),e.value):null}del(e){w(this,this[d].get(e))}load(e){this.reset();const t=Date.now();for(let n=e.length-1;n>=0;n--){const s=e[n],o=s.e||0;if(0===o)this.set(s.k,s.v);else{const e=o-t;e>0&&this.set(s.k,s.v,e)}}}prune(){this[d].forEach(((e,t)=>f(this,t,!1)))}}},766:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0});const s=n(982);t.default=function(e){return Array.isArray(e)?e=Buffer.from(e):"string"==typeof e&&(e=Buffer.from(e,"utf8")),(0,s.createHash)("sha1").update(e).digest()}},799:(e,t,n)=>{function s(e){var t=this;if(t instanceof s||(t=new s),t.tail=null,t.head=null,t.length=0,e&&"function"==typeof e.forEach)e.forEach((function(e){t.push(e)}));else if(arguments.length>0)for(var n=0,o=arguments.length;n<o;n++)t.push(arguments[n]);return t}function o(e,t,n,s){if(!(this instanceof o))return new o(e,t,n,s);this.list=s,this.value=e,t?(t.next=this,this.prev=t):this.prev=null,n?(n.prev=this,this.next=n):this.next=null}e.exports=s,s.Node=o,s.create=s,s.prototype.removeNode=function(e){if(e.list!==this)throw new Error("removing node which does not belong to this list");var t=e.next,n=e.prev;return t&&(t.prev=n),n&&(n.next=t),e===this.head&&(this.head=t),e===this.tail&&(this.tail=n),e.list.length--,e.next=null,e.prev=null,e.list=null,t},s.prototype.unshiftNode=function(e){if(e!==this.head){e.list&&e.list.removeNode(e);var t=this.head;e.list=this,e.next=t,t&&(t.prev=e),this.head=e,this.tail||(this.tail=e),this.length++}},s.prototype.pushNode=function(e){if(e!==this.tail){e.list&&e.list.removeNode(e);var t=this.tail;e.list=this,e.prev=t,t&&(t.next=e),this.tail=e,this.head||(this.head=e),this.length++}},s.prototype.push=function(){for(var e=0,t=arguments.length;e<t;e++)s=arguments[e],(n=this).tail=new o(s,n.tail,null,n),n.head||(n.head=n.tail),n.length++;var n,s;return this.length},s.prototype.unshift=function(){for(var e=0,t=arguments.length;e<t;e++)s=arguments[e],(n=this).head=new o(s,null,n.head,n),n.tail||(n.tail=n.head),n.length++;var n,s;return this.length},s.prototype.pop=function(){if(this.tail){var e=this.tail.value;return this.tail=this.tail.prev,this.tail?this.tail.next=null:this.head=null,this.length--,e}},s.prototype.shift=function(){if(this.head){var e=this.head.value;return this.head=this.head.next,this.head?this.head.prev=null:this.tail=null,this.length--,e}},s.prototype.forEach=function(e,t){t=t||this;for(var n=this.head,s=0;null!==n;s++)e.call(t,n.value,s,this),n=n.next},s.prototype.forEachReverse=function(e,t){t=t||this;for(var n=this.tail,s=this.length-1;null!==n;s--)e.call(t,n.value,s,this),n=n.prev},s.prototype.get=function(e){for(var t=0,n=this.head;null!==n&&t<e;t++)n=n.next;if(t===e&&null!==n)return n.value},s.prototype.getReverse=function(e){for(var t=0,n=this.tail;null!==n&&t<e;t++)n=n.prev;if(t===e&&null!==n)return n.value},s.prototype.map=function(e,t){t=t||this;for(var n=new s,o=this.head;null!==o;)n.push(e.call(t,o.value,this)),o=o.next;return n},s.prototype.mapReverse=function(e,t){t=t||this;for(var n=new s,o=this.tail;null!==o;)n.push(e.call(t,o.value,this)),o=o.prev;return n},s.prototype.reduce=function(e,t){var n,s=this.head;if(arguments.length>1)n=t;else{if(!this.head)throw new TypeError("Reduce of empty list with no initial value");s=this.head.next,n=this.head.value}for(var o=0;null!==s;o++)n=e(n,s.value,o),s=s.next;return n},s.prototype.reduceReverse=function(e,t){var n,s=this.tail;if(arguments.length>1)n=t;else{if(!this.tail)throw new TypeError("Reduce of empty list with no initial value");s=this.tail.prev,n=this.tail.value}for(var o=this.length-1;null!==s;o--)n=e(n,s.value,o),s=s.prev;return n},s.prototype.toArray=function(){for(var e=new Array(this.length),t=0,n=this.head;null!==n;t++)e[t]=n.value,n=n.next;return e},s.prototype.toArrayReverse=function(){for(var e=new Array(this.length),t=0,n=this.tail;null!==n;t++)e[t]=n.value,n=n.prev;return e},s.prototype.slice=function(e,t){(t=t||this.length)<0&&(t+=this.length),(e=e||0)<0&&(e+=this.length);var n=new s;if(t<e||t<0)return n;e<0&&(e=0),t>this.length&&(t=this.length);for(var o=0,i=this.head;null!==i&&o<e;o++)i=i.next;for(;null!==i&&o<t;o++,i=i.next)n.push(i.value);return n},s.prototype.sliceReverse=function(e,t){(t=t||this.length)<0&&(t+=this.length),(e=e||0)<0&&(e+=this.length);var n=new s;if(t<e||t<0)return n;e<0&&(e=0),t>this.length&&(t=this.length);for(var o=this.length,i=this.tail;null!==i&&o>t;o--)i=i.prev;for(;null!==i&&o>e;o--,i=i.prev)n.push(i.value);return n},s.prototype.splice=function(e,t,...n){e>this.length&&(e=this.length-1),e<0&&(e=this.length+e);for(var s=0,i=this.head;null!==i&&s<e;s++)i=i.next;var r,a,l,c,g=[];for(s=0;i&&s<t;s++)g.push(i.value),i=this.removeNode(i);for(null===i&&(i=this.tail),i!==this.head&&i!==this.tail&&(i=i.prev),s=0;s<n.length;s++)r=this,a=i,l=n[s],c=void 0,null===(c=a===r.head?new o(l,null,a,r):new o(l,a,a.next,r)).next&&(r.tail=c),null===c.prev&&(r.head=c),r.length++,i=c;return g},s.prototype.reverse=function(){for(var e=this.head,t=this.tail,n=e;null!==n;n=n.prev){var s=n.prev;n.prev=n.next,n.next=s}return this.head=t,this.tail=e,this};try{n(259)(s)}catch(e){}},827:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.version=t.validate=t.v7=t.v6ToV1=t.v6=t.v5=t.v4=t.v3=t.v1ToV6=t.v1=t.stringify=t.parse=t.NIL=t.MAX=void 0;var s=n(609);Object.defineProperty(t,"MAX",{enumerable:!0,get:function(){return s.default}});var o=n(588);Object.defineProperty(t,"NIL",{enumerable:!0,get:function(){return o.default}});var i=n(524);Object.defineProperty(t,"parse",{enumerable:!0,get:function(){return i.default}});var r=n(202);Object.defineProperty(t,"stringify",{enumerable:!0,get:function(){return r.default}});var a=n(458);Object.defineProperty(t,"v1",{enumerable:!0,get:function(){return a.default}});var l=n(891);Object.defineProperty(t,"v1ToV6",{enumerable:!0,get:function(){return l.default}});var c=n(32);Object.defineProperty(t,"v3",{enumerable:!0,get:function(){return c.default}});var g=n(597);Object.defineProperty(t,"v4",{enumerable:!0,get:function(){return g.default}});var h=n(502);Object.defineProperty(t,"v5",{enumerable:!0,get:function(){return h.default}});var d=n(971);Object.defineProperty(t,"v6",{enumerable:!0,get:function(){return d.default}});var u=n(959);Object.defineProperty(t,"v6ToV1",{enumerable:!0,get:function(){return u.default}});var p=n(508);Object.defineProperty(t,"v7",{enumerable:!0,get:function(){return p.default}});var f=n(873);Object.defineProperty(t,"validate",{enumerable:!0,get:function(){return f.default}});var m=n(547);Object.defineProperty(t,"version",{enumerable:!0,get:function(){return m.default}})},870:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.OllamaClient=void 0;const s=n(628),o=n(373);t.OllamaClient=class{constructor(e,t){this.configManager=e,this.logger=s.Logger.getInstance(),this.modelConfig=t||{title:e.getModelName(),model:e.getModelName(),provider:o.ModelProvider.OLLAMA,apiBase:e.getApiUrl(),temperature:e.getTemperature(),maxTokens:e.getMaxTokens()}}async getCompletion(e){try{const t=this.modelConfig.apiBase||this.configManager.getApiUrl(),n=this.modelConfig.model||this.configManager.getModelName(),s=this.modelConfig.temperature||this.configManager.getTemperature(),o=this.modelConfig.maxTokens||this.configManager.getMaxTokens();this.logger.debug(`使用模型: ${n}, 温度: ${s}, 最大令牌数: ${o}`);const i=this.buildPrompt(e);this.configManager.isDebugEnabled()?this.logger.debug(`完整提示词:\n${i}`):this.logger.debug(`提示词前100个字符: ${i.substring(0,100)}...`);const r={model:n,prompt:i,temperature:s,max_tokens:o,options:{num_predict:o}};this.logger.debug(`发送请求到 Ollama API: ${t}/api/generate`),this.logger.debug(`请求内容: ${JSON.stringify({model:n,temperature:s,max_tokens:o,prompt_length:i.length})}`),this.logger.debug("开始fetch请求..."),this.logger.debug(`请求体大小: ${JSON.stringify(r).length} 字符`);const a=await fetch(`${t}/api/generate`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)});this.logger.debug(`Ollama API 响应状态: ${a.status} ${a.statusText}`);const l={};if(a.headers.forEach(((e,t)=>{l[t]=e})),this.logger.debug(`响应头: ${JSON.stringify(l)}`),!a.ok){const e=await a.text();return this.logger.error(`API请求失败: ${a.status} ${a.statusText} - ${e}`),null}const c=await a.text(),g=(c.match(/\{/g)||[]).length,h=(c.match(/\}/g)||[]).length;this.logger.debug(`响应是否包含JSON标记: { 出现 ${g} 次, } 出现 ${h} 次`);const d=c.includes('"response"');this.logger.debug(`响应是否包含response字段: ${d}`);let u="";if(c.includes('"response"'))try{const e=c.split("\n").filter((e=>""!==e.trim()));for(const t of e)try{const e=JSON.parse(t);e&&e.response&&(u+=e.response)}catch(e){this.logger.debug(`解析响应行时出错: ${e.message}, 行内容: ${t.substring(0,50)}...`)}this.logger.debug(`从流式响应中提取的完整内容, 长度: ${u.length}`),("```"===u.trim()||"``"===u.trim()||u.trim().length<=3)&&(this.logger.debug("流式响应提取内容过短或只有代码块标记，尝试备用方法"),u="")}catch(e){this.logger.error(`处理流式响应时出错: ${e.message}`),u=""}if(!u||u.trim().length<=5){this.logger.debug("尝试使用正则表达式提取所有响应");try{let e="";const t=/"response":[ ]*"([^"]*)"/g;let n;for(;null!==(n=t.exec(c));)n[1]&&(e+=n[1].replace(/\\n/g,"\n").replace(/\\r/g,"\r").replace(/\\"/g,'"'));e.length>0&&(this.logger.debug(`正则提取成功，提取长度: ${e.length}`),u=e)}catch(e){this.logger.debug(`正则提取失败: ${e.message}`)}}if(!u||0===u.trim().length){this.logger.debug("尝试直接从响应文本提取内容");const e=this.extractCompletionDirectly(c);if(e)u=e,this.logger.debug(`直接提取到内容，长度: ${u.length}`);else try{const e=this.cleanJsonResponse(c),t=JSON.parse(e);t.response?(u=t.response,this.logger.debug(`从清理后的JSON中提取到response，长度: ${u.length}`)):(u=this.extractAnyContent(c),this.logger.debug(`尝试提取任何内容，结果长度: ${u?u.length:0}`))}catch(e){this.logger.error(`清理JSON响应后解析失败: ${e.message}`),u=this.extractAnyContent(c),this.logger.debug(`最后尝试提取任何内容，结果长度: ${u?u.length:0}`)}}if(this.logger.debug("对补全结果进行后处理"),u.startsWith("```")){const e=u.indexOf("\n");if(-1!==e){const t=u.substring(0,e);this.logger.debug(`移除了前缀: "${t}"`),u=u.substring(e+1)}else this.logger.debug(`移除了前缀: "${u}"`),u="";const t=u.lastIndexOf("```");-1!==t&&(u=u.substring(0,t).trim(),this.logger.debug('移除了结尾的代码块标记"```"'))}const p=this.postProcessCompletion(u,e);return p?(this.logger.debug(`最终补全结果长度: ${p.length}`),this.logger.debug(`最终补全结果前100字符: ${p.substring(0,100)}${p.length>100?"...":""}`)):this.logger.debug("没有有效的补全结果"),p}catch(e){return this.logger.error(`获取补全时出错: ${e.message}`,e),null}}cleanJsonResponse(e){if(this.logger.debug(`尝试修复JSON，原始长度: ${e.length}`),!e||""===e.trim())return'{"response": ""}';let t=e.replace(/^\uFEFF/,"");t=t.trim();const n=t.split("\n");if(n.length>1){this.logger.debug(`检测到多行响应，行数: ${n.length}`);const e=n[0].trim();if(e.startsWith("{")&&e.endsWith("}"))try{return JSON.parse(e),this.logger.debug("第一行是有效JSON，直接使用"),e}catch(e){this.logger.debug("第一行不是有效JSON，继续尝试其他方法")}let t="",s=0,o=!1;for(let e=0;e<Math.min(n.length,5);e++)if(t+=n[e],s+=(n[e].match(/{/g)||[]).length,s-=(n[e].match(/}/g)||[]).length,0===s&&t.trim().startsWith("{")&&t.trim().endsWith("}"))try{JSON.parse(t),o=!0,this.logger.debug(`组合了${e+1}行形成有效JSON`);break}catch(e){}if(o)return t}const s=t.indexOf("}{");if(s>0&&(this.logger.debug("检测到多个JSON对象，截取第一个"),t=t.substring(0,s+1)),t.includes('"done":')&&!t.includes('"response":')){const e=t.match(/"content":"([^"]*)"/g);if(e&&e.length>0){this.logger.debug("检测到流式响应，合并内容");let t="";for(const n of e){const e=n.match(/"content":"([^"]*)"/);e&&e[1]&&(t+=e[1])}return`{"response": "${t.replace(/"/g,'\\"')}"}`}}const o=(t.match(/{/g)||[]).length,i=(t.match(/}/g)||[]).length;if(o>i)this.logger.debug(`添加 ${o-i} 个缺失的结束括号`),t+="}}".repeat(o-i);else if(i>o){this.logger.debug(`移除 ${i-o} 个多余的结束括号`);const e=t.length;for(let n=0;n<i-o;n++){const n=t.lastIndexOf("}",e-1);-1!==n&&(t=t.substring(0,n)+t.substring(n+1))}}if(!t.startsWith("{")){this.logger.debug("添加开始大括号");const e=t.indexOf("{");t=e>=0?t.substring(e):"{"+t}if(!t.endsWith("}")){this.logger.debug("添加结束大括号");const e=t.lastIndexOf("}");e>=0?t=t.substring(0,e+1):t+="}"}const r=t.indexOf("{"),a=t.lastIndexOf("}");if(r>=0&&a>r&&(this.logger.debug(`提取JSON部分: ${r}-${a}`),t=t.substring(r,a+1)),t=t.replace(/[\u0000-\u001F]+/g," ").replace(/([^\\])"/g,'$1\\"').replace(/^([^{]*)({.*)$/,"$2").replace(/^{([^:]*):/,'{"response":'),!t.includes('"response"')){this.logger.debug("添加缺失的response字段");const e=t.match(/"([^"]{5,})"/);t=e&&e[1]?`{"response": "${e[1].replace(/"/g,'\\"')}"}`:'{"response": ""}'}return this.logger.debug(`修复后的JSON: ${t.substring(0,Math.min(100,t.length))}...`),t}buildPrompt(e){const t=e.fileType||e.language||"javascript";this.logger.debug(`为语言 ${t} 构建提示词模板`);let n="";const s=e.textBeforeCursor&&/[\u4e00-\u9fa5]/.test(e.textBeforeCursor);if(s&&this.logger.debug("检测到中文内容，调整提示词"),e.commentMode||e.isInComment?n+=s?`你是一位专业的${t}程序员。根据上下文继续完成以下文档注释。只需完成注释内容，不要编写任何代码。不要返回JSON格式或obj['complete_code']这样的结构，直接返回纯文本注释。只关注光标位置的注释，不要生成整个文件的注释。请使用中文回复：\n\n`:`You are an expert ${t} programmer. Continue the following documentation comment based on the context. Only complete the comment, don't write any code. Do NOT return JSON format or structures like obj['complete_code']. ONLY output plain text comment. Focus ONLY on the comment at the cursor position, do not generate documentation for the entire file:\n\n`:n+=s?`你是一位专业的${t}程序员。请根据上下文完成光标处的${t}代码。直接输出代码，不要添加任何解释、Markdown格式或JSON结构。不要返回obj['complete_code']这样的结构，只输出纯代码。只关注光标位置的代码补全，可以是一个函数、一个类或几行代码，但不要生成整个文件的内容。你的输出应该是可以直接在光标处插入的有效${t}代码：\n\n`:`You are an expert ${t} programmer. Complete the ${t} code at the cursor position based on the context. Output ONLY valid ${t} code without any explanation, markdown formatting, or JSON structures. Do NOT wrap the code in obj['complete_code'] or any similar structure. Focus ONLY on completing the code at the cursor position - this could be a function, class, or a few lines of code, but do NOT regenerate the entire file. Output should be ONLY plain code that can be directly inserted at the cursor position:\n\n`,e.documentText&&e.documentText.length>0){const t=2e3;n+=`# Current file content (for context):\n${e.documentText.length>t?e.documentText.substring(e.documentText.length-t):e.documentText}\n\n`}return e.textBeforeCursor&&(n+=`# Code before cursor:\n${e.textBeforeCursor}\n`),e.previousCompletion&&(this.logger.debug("包含之前的补全结果"),n+=`\n# Previously completed part:\n${e.previousCompletion}\n`),e.relevantCachedCode&&e.relevantCachedCode.length>0&&(this.logger.debug("包含相关的缓存代码"),n+=`\n\n# Similar code for reference (don't repeat this):\n${e.relevantCachedCode}\n`),n+=`\n# Complete ONLY the code at cursor position (${t} code only):\n`,n}postProcessCompletion(e,t){if(!e)return"";const n=t.fileType||"javascript";if(this.logger.debug("对补全结果进行后处理"),e=this.cleanJsonWrappedCode(e),"python"===n)/function\s+|var\s+|let\s+|const\s+|===|!==|this\.|prototype\.|=>|};/g.test(e)&&(this.logger.debug("检测到Python文件中返回了疑似JavaScript代码，尝试修复"),e=e.replace(/function\s+([a-zA-Z0-9_]+)\s*\(/g,"def $1(").replace(/var\s+|let\s+|const\s+/g,"").replace(/this\./g,"self.").replace(/===|==/g,"==").replace(/!==|!=/g,"!=").replace(/;/g,"").replace(/true/g,"True").replace(/false/g,"False").replace(/null/g,"None"));else if(("javascript"===n||"typescript"===n)&&/def\s+|elif\s+|self\.|:\s*$/m.test(e)){this.logger.debug(`检测到${n}文件中返回了疑似Python代码，尝试修复`);const t=(e=e.replace(/def\s+([a-zA-Z0-9_]+)\s*\(/g,"function $1(").replace(/elif\s+/g,"else if (").replace(/self\./g,"this.").replace(/True/g,"true").replace(/False/g,"false").replace(/None/g,"null")).split("\n"),s=[];for(let e=0;e<t.length;e++){let n=t[e];n.trim().endsWith(":")&&(n=n.replace(/:$/," {")),s.push(n)}e=s.join("\n")}return e}cleanJsonWrappedCode(e){try{const t=e.trim();if(t.startsWith("{")&&t.endsWith("}"))try{const e=JSON.parse(t);for(const t of["code","complete_code","completion","content","result"])if(e[t]&&"string"==typeof e[t])return this.logger.debug(`检测到JSON包装的代码，提取字段: ${t}`),e[t]}catch(e){}const n=/^\s*(?:let|const|var)?\s*(?:obj|result|response|output|completion)\s*(?:\[\s*['"](\w+)['"]\s*\]|\.(\w+))\s*(?:=\s*)?['"](.+)['"]\s*;?\s*$/s,s=/^\s*(?:let|const|var)?\s*(?:obj|result|response|output|completion)\s*(?:\[\s*['"](\w+)['"]\s*\]|\.(\w+))\s*(?:=\s*)?['"](.+)['"]$/s;let o=e.match(n)||e.match(s);if(o&&o[3])return this.logger.debug("检测到对象访问模式的代码包装，提取内容"),o[3].replace(/\\n/g,"\n").replace(/\\"/g,'"').replace(/\\\\/g,"\\");const i=/obj\s*\[\s*['"]complete_code['"]\s*\]\s*=?\s*['"]([\s\S]*?)['"]/,r=e.match(i);if(r&&r[1])return this.logger.debug("检测到特定的obj['complete_code']模式，提取内容"),r[1].replace(/\\n/g,"\n").replace(/\\"/g,'"').replace(/\\\\/g,"\\")}catch(e){this.logger.debug(`清理JSON包装代码时出错: ${e instanceof Error?e.message:"未知错误"}`)}return e}isInMultilineComment(e,t){if(["javascript","typescript","java","c","cpp","csharp"].includes(t))return(e.match(/\/\*/g)||[]).length>(e.match(/\*\//g)||[]).length;if("python"===t){const t=(e.match(/'''/g)||[]).length,n=(e.match(/"""/g)||[]).length;return t%2!=0||n%2!=0}return!1}async testConnection(){this.logger.info(`测试与 Ollama 服务的连接: ${this.modelConfig.apiBase||this.configManager.getApiUrl()}`);try{const e=this.modelConfig.apiBase||this.configManager.getApiUrl();this.logger.debug(`系统信息: Node版本: ${process.version}, 平台: ${process.platform}`),this.logger.debug(`当前工作目录: ${process.cwd()}`),this.logger.debug(`API URL: ${e}, 测试端点: ${e}/api/tags`),this.logger.debug(`开始fetch请求 ${e}/api/tags`);const t=await fetch(`${e}/api/tags`);if(this.logger.debug(`收到响应: 状态码=${t.status}, 状态=${t.statusText}`),t.ok){const e=await t.text();let n;this.logger.debug(`响应内容: ${e}`);try{n=JSON.parse(e)}catch(t){return this.logger.error(`解析JSON响应时出错: ${t}`),{success:!1,message:`收到无效的JSON响应: ${e.substring(0,100)}...`}}if(n.models){const e=n.models.map((e=>e.name));return this.logger.info(`成功连接到 Ollama 服务，发现 ${e.length} 个模型: ${e.join(", ")}`),{success:!0,message:"成功连接到Ollama服务",models:e}}this.logger.warn(`响应缺少models字段: ${JSON.stringify(n)}`)}else this.logger.warn(`Ollama API响应状态不成功: ${t.status} ${t.statusText}`);return this.logger.warn("已连接到 Ollama 服务，但无法获取模型列表"),{success:!0,message:"已连接到Ollama服务，但无法获取模型列表",models:[]}}catch(e){this.logger.error(`测试Ollama连接时出错: ${e instanceof Error?e.message:String(e)}`),this.logger.error(`错误堆栈: ${e instanceof Error?e.stack:"无堆栈"}`);let t="无法连接到Ollama服务";if(e instanceof Error)if("ECONNREFUSED"===e.code)t="Ollama服务未运行或无法访问";else if("response"in e){const n=e;t=`服务响应错误: ${n.response?.status} ${n.response?.statusText}`}return{success:!1,message:t}}}extractCompletionDirectly(e){if(!e.includes("{")&&!e.includes("}"))return e.trim();const t=e.split("}");if(t.length>1){const e=t[t.length-1].trim();if(e.length>0&&!e.includes("{"))return e}const n=[/"response"\s*:\s*"((?:\\"|[^"])*?)"/,/"content"\s*:\s*"((?:\\"|[^"])*?)"/,/"completion"\s*:\s*"((?:\\"|[^"])*?)"/];for(const t of n){const n=e.match(t);if(n&&n[1])return n[1].replace(/\\"/g,'"').replace(/\\n/g,"\n")}return null}extractAnyContent(e){let t=e.replace(/[{}\[\]"]/g," ");const n=t.indexOf(":");return n>0&&(t=t.substring(n+1)),t=t.replace(/\\n/g,"\n").replace(/\s+/g," ").trim(),t.length<5?"":t}async generateCompletion(e,t,n){try{const s=this.modelConfig.apiBase||this.configManager.getApiUrl(),o=t.model||this.modelConfig.model||this.configManager.getModelName(),i=void 0!==t.temperature?t.temperature:this.modelConfig.temperature||this.configManager.getTemperature(),r=t.maxTokens||this.modelConfig.maxTokens||this.configManager.getMaxTokens();this.logger.debug(`生成补全: API URL=${s}, 模型=${o}, 温度=${i}, 最大令牌数=${r}`),this.configManager.isDebugEnabled()?this.logger.debug(`完整提示词:\n${e}`):this.logger.debug(`提示词前100个字符: ${e.substring(0,100)}...`);const a={model:o,prompt:e,temperature:i,max_tokens:r,options:{num_predict:r}};this.logger.debug(`发送请求到Ollama API: ${s}/api/generate`),this.logger.debug(`请求体大小: ${JSON.stringify(a).length} 字符`);const l={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a),signal:n};this.logger.debug("开始发送fetch请求...");const c=await fetch(`${s}/api/generate`,l);if(n?.aborted)return this.logger.debug("请求被中止"),null;if(this.logger.debug(`Ollama API响应状态: ${c.status} ${c.statusText}`),!c.ok){const e=await c.text();throw this.logger.error(`API请求失败: ${c.status} ${c.statusText} - ${e}`),new Error(`API请求失败: ${c.status} ${c.statusText} - ${e}`)}const g=await c.text();this.logger.debug(`获取到响应文本，长度: ${g.length}`);let h="";if(g.includes('"response"'))try{this.logger.debug("检测到response字段，解析流式JSON响应");const e=g.split("\n").filter((e=>""!==e.trim()));this.logger.debug(`响应行数: ${e.length}`);let t=0;for(const n of e)try{const e=JSON.parse(n);e&&e.response&&(h+=e.response,t++)}catch(e){this.logger.debug(`解析响应行时出错: ${e.message}`)}this.logger.debug(`成功处理的响应行: ${t}/${e.length}`),this.logger.debug(`从流式响应中提取的完整内容长度: ${h.length}`)}catch(e){this.logger.error(`处理流式响应时出错: ${e.message}`),h=""}else this.logger.debug("未检测到response字段，尝试其他方法解析响应");if(!h||0===h.trim().length){this.logger.debug("尝试使用正则表达式提取所有响应");try{let e="";const t=/"response":[ ]*"([^"]*)"/g;let n,s=0;for(;null!==(n=t.exec(g));)n[1]&&(e+=n[1].replace(/\\n/g,"\n").replace(/\\r/g,"\r").replace(/\\"/g,'"'),s++);e.length>0?(this.logger.debug(`正则提取成功，找到${s}个匹配，提取长度: ${e.length}`),h=e):this.logger.debug("正则表达式没有找到匹配")}catch(e){this.logger.debug(`正则提取失败: ${e.message}`)}}if(!h||0===h.trim().length){this.logger.debug("尝试直接从响应文本中提取内容");const e=this.extractCompletionDirectly(g);e?(h=e,this.logger.debug(`直接提取成功，提取长度: ${h.length}`)):this.logger.debug("直接提取失败")}if(h.startsWith("```")){const e=h.indexOf("\n");h=-1!==e?h.substring(e+1):"";const t=h.lastIndexOf("```");-1!==t&&(h=h.substring(0,t).trim()),this.logger.debug("已移除Markdown代码块标记")}return h?(this.logger.debug(`最终补全结果长度: ${h.length}`),this.configManager.isDebugEnabled()&&this.logger.debug(`最终补全结果前200字符: ${h.substring(0,200)}${h.length>200?"...":""}`)):this.logger.debug("没有有效的补全结果"),h}catch(e){if(n?.aborted)return this.logger.debug("请求被中止"),null;throw this.logger.error(`生成补全时出错: ${e.message}`,e),e}}}},873:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0});const s=n(596);t.default=function(e){return"string"==typeof e&&s.default.test(e)}},891:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0});const s=n(524),o=n(202);t.default=function(e){const t=(n="string"==typeof e?(0,s.default)(e):e,Uint8Array.of((15&n[6])<<4|n[7]>>4&15,(15&n[7])<<4|(240&n[4])>>4,(15&n[4])<<4|(240&n[5])>>4,(15&n[5])<<4|(240&n[0])>>4,(15&n[0])<<4|(240&n[1])>>4,(15&n[1])<<4|(240&n[2])>>4,96|15&n[2],n[3],n[8],n[9],n[10],n[11],n[12],n[13],n[14],n[15]));var n;return"string"==typeof e?(0,o.unsafeStringify)(t):t}},933:function(e,t,n){var s=this&&this.__createBinding||(Object.create?function(e,t,n,s){void 0===s&&(s=n),Object.defineProperty(e,s,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,s){void 0===s&&(s=n),e[s]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&s(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.CommandManager=void 0;const r=i(n(398)),a=n(628),l=n(92),c=n(373);t.CommandManager=class{constructor(e,t,n,s){this.configManager=e,this.cacheManager=t,this.completionProvider=n,this.context=s,this.disposables=[],this.logger=a.Logger.getInstance(),this.clientFactory=new l.ClientFactory(e),this.registerCommands()}registerCommands(){const e={"tabAutoComplete.enable":this.enableExtension.bind(this),"tabAutoComplete.disable":this.disableExtension.bind(this),"tabAutoComplete.selectModel":this.selectModel.bind(this),"tabAutoComplete.clearCache":this.clearCache.bind(this),"tabAutoComplete.testConnection":this.testConnection.bind(this),"tabAutoComplete.showConfig":this.showConfig.bind(this),"tabAutoComplete.applyCompletion":this.applyCompletion.bind(this),"tabAutoComplete.handleEscape":this.handleEscape.bind(this),"tabAutoComplete.manageModels":this.manageModels.bind(this),"tabAutoComplete.toggleEnabled":this.toggleEnabled.bind(this)};for(const[t,n]of Object.entries(e)){const e=r.commands.registerCommand(t,n);this.disposables.push(e)}}async enableExtension(){await this.configManager.setEnabled(!0),r.window.showInformationMessage("Ollama 代码补全已启用")}async disableExtension(){await this.configManager.setEnabled(!1),r.window.showInformationMessage("Ollama 代码补全已禁用")}async toggleEnabled(){const e=this.configManager.isEnabled();await this.configManager.setEnabled(!e),r.window.showInformationMessage(e?"TabAutoComplete已禁用":"TabAutoComplete已启用")}async selectModel(){const e=this.configManager.getAvailableModels(),t=a.Logger.getInstance();if(0===e.length)return t.warn("没有可用的模型配置，请先添加模型"),r.window.showInformationMessage("没有可用的模型配置，请先添加模型"),void this.manageModels();const n=this.configManager.getSelectedModelName();t.debug(`当前选择的模型: ${n}`);const s=e.map(((e,t)=>({label:e.title,description:`${e.provider} - ${e.model}`,detail:`API地址: ${e.apiBase||"默认"}${e.apiKey?", API密钥: 已设置":""}`,index:t,model:e,picked:e.title===n}))),o=await r.window.showQuickPick(s,{placeHolder:"选择要使用的模型"});if(o){t.info(`用户选择了模型: ${o.label} (${o.description})`),await this.configManager.setSelectedModelName(o.label);const e=`已选择模型: ${o.label}\n提供商: ${o.model.provider}\n模型: ${o.model.model}\nAPI地址: ${o.model.apiBase||"默认"}`;r.window.showInformationMessage(e,"测试连接").then((e=>{"测试连接"===e&&this.testConnection()}))}}async clearCache(){"确定"===await r.window.showWarningMessage("确定要清除所有代码补全缓存吗？",{modal:!0},"确定")&&(this.cacheManager.clearCache(),r.window.showInformationMessage("代码补全缓存已清除"))}async testConnection(){r.window.withProgress({location:r.ProgressLocation.Notification,title:"测试AI模型连接",cancellable:!1},(async e=>{e.report({message:"正在连接..."});try{const e=this.configManager.getSelectedModelConfig(),t=this.clientFactory.createClient(e),n=await t.testConnection();if(n.success){let t=`连接成功: ${e.provider} - ${e.model}`;n.models&&n.models.length>0&&(t+=`\n可用模型: ${n.models.slice(0,5).join(", ")}${n.models.length>5?"...":""}`),r.window.showInformationMessage(t)}else r.window.showErrorMessage(`连接失败: ${n.message}`)}catch(e){r.window.showErrorMessage(`连接测试出错: ${e.message}`)}}))}showConfig(){const e=this.configManager.getFullConfig(),t=this.configManager.getSelectedModelConfig(),n=["# TabAutoComplete 配置","","## 当前选择的模型",`- 标题: ${t.title}`,`- 提供商: ${t.provider}`,`- 模型名称: ${t.model}`,`- API地址: ${t.apiBase||"默认"}`,t.apiKey?"- API密钥: ******（已设置）":"","","## 常规设置","- 启用状态: "+(e.enabled?"✅ 启用":"❌ 禁用"),`- 触发延迟: ${e.triggerDelay}毫秒`,"","## 上下文设置",`- 最大上下文行数: ${e.maxContextLines}`,"- 包含导入语句: "+(e.includeImports?"是":"否"),"- 包含注释: "+(e.includeComments?"是":"否"),"","## 缓存设置","- 启用缓存: "+(e.cacheEnabled?"是":"否"),`- 保留时间: ${e.retentionPeriodHours}小时`,`- 最大缓存条目: ${e.maxSnippets}`,"","## 文件类型设置",`- 启用的文件类型: ${Array.isArray(e.enabledFileTypes)?e.enabledFileTypes.join(", "):e.enabledFileTypes}`,`- 禁用的文件类型: ${Array.isArray(e.disabledFileTypes)?e.disabledFileTypes.join(", "):e.disabledFileTypes}`].join("\n");r.window.createWebviewPanel("tabAutoCompleteConfig","TabAutoComplete 配置",r.ViewColumn.One,{}).webview.html=`<!DOCTYPE html>\n<html lang="zh-CN">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>TabAutoComplete 配置</title>\n    <style>\n        body {\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', system-ui, 'Ubuntu', 'Droid Sans', sans-serif;\n            padding: 0 20px;\n            line-height: 1.5;\n        }\n        h1 { color: #333; border-bottom: 1px solid #eee; padding-bottom: 10px; }\n        h2 { color: #0078d7; margin-top: 20px; }\n        ul { padding-left: 20px; }\n        li { margin-bottom: 5px; }\n    </style>\n</head>\n<body>\n    ${this.markdownToHtml(n)}\n</body>\n</html>`}markdownToHtml(e){return e.replace(/^# (.*$)/gm,"<h1>$1</h1>").replace(/^## (.*$)/gm,"<h2>$1</h2>").replace(/^- (.*$)/gm,"<ul><li>$1</li></ul>").replace(/<\/ul><ul>/g,"").replace(/\n\n/g,"<br><br>")}applyCompletion(){r.window.activeTextEditor&&(this.completionProvider.hasActivePreview()?this.completionProvider.accept():r.commands.executeCommand("tab"))}handleEscape(){r.window.activeTextEditor&&(this.completionProvider.hasActivePreview()?this.completionProvider.clearPreview():r.commands.executeCommand("escape"),this.completionProvider.cancel())}async manageModels(){const e=await r.window.showQuickPick(["查看所有模型","添加新模型","编辑模型","删除模型"],{placeHolder:"选择操作"});if(e)switch(e){case"查看所有模型":this.viewAllModels();break;case"添加新模型":this.addNewModel();break;case"编辑模型":this.editModel();break;case"删除模型":this.deleteModel()}}viewAllModels(){const e=this.configManager.getAvailableModels();if(0===e.length)return void r.window.showInformationMessage("没有可用的模型配置");const t=r.window.createWebviewPanel("tabAutoCompleteModels","TabAutoComplete 模型",r.ViewColumn.One,{});let n="";e.forEach(((e,t)=>{n+=`\n                <div class="model-item">\n                    <h3>${e.title}</h3>\n                    <div class="model-detail">\n                        <span class="key">提供商:</span> \n                        <span class="value">${e.provider}</span>\n                    </div>\n                    <div class="model-detail">\n                        <span class="key">模型:</span> \n                        <span class="value">${e.model}</span>\n                    </div>\n                    <div class="model-detail">\n                        <span class="key">API基础URL:</span> \n                        <span class="value">${e.apiBase||"默认"}</span>\n                    </div>\n                    ${e.apiKey?'<div class="model-detail"><span class="key">API密钥:</span> <span class="value">已设置</span></div>':""}\n                    ${e.contextLength?`<div class="model-detail"><span class="key">上下文长度:</span> <span class="value">${e.contextLength}</span></div>`:""}\n                    ${e.temperature?`<div class="model-detail"><span class="key">温度:</span> <span class="value">${e.temperature}</span></div>`:""}\n                    ${e.maxTokens?`<div class="model-detail"><span class="key">最大Token数:</span> <span class="value">${e.maxTokens}</span></div>`:""}\n                </div>\n            `})),t.webview.html=`\n            <!DOCTYPE html>\n            <html>\n            <head>\n                <meta charset="UTF-8">\n                <meta name="viewport" content="width=device-width, initial-scale=1.0">\n                <title>TabAutoComplete 模型</title>\n                <style>\n                    body { font-family: Arial, sans-serif; padding: 20px; }\n                    h1 { color: #333; }\n                    h3 { color: #0077cc; margin-bottom: 10px; }\n                    .model-item { \n                        margin-bottom: 30px; \n                        padding: 15px;\n                        border: 1px solid #ddd;\n                        border-radius: 5px;\n                    }\n                    .model-detail { margin: 5px 0; }\n                    .key { font-weight: bold; }\n                    .value { color: #333; }\n                </style>\n            </head>\n            <body>\n                <h1>可用的AI模型 (${e.length})</h1>\n                ${n}\n            </body>\n            </html>\n        `}async addNewModel(){const e=[{label:"Ollama (本地)",value:c.ModelProvider.OLLAMA},{label:"DeepSeek",value:c.ModelProvider.DEEPSEEK},{label:"OpenAI",value:c.ModelProvider.OPENAI},{label:"SiliconFlow",value:c.ModelProvider.SILICONFLOW}],t=await r.window.showQuickPick(e,{placeHolder:"选择模型提供商"});if(!t)return;const n={title:"",model:"",provider:t.value},s=await r.window.showInputBox({prompt:"输入模型显示名称",placeHolder:"例如: GPT-4, DeepSeek Coder, qwen2.5-coder:7b"});if(!s)return;n.title=s;const o=await r.window.showInputBox({prompt:"输入模型名称",placeHolder:"例如: gpt-4, deepseek-coder, qwen2.5-coder:7b"});if(!o)return;if(n.model=o,t.value!==c.ModelProvider.OLLAMA){const e=await r.window.showInputBox({prompt:`输入${t.label} API密钥`,password:!0});if(!e)return;n.apiKey=e}const i=await r.window.showInputBox({prompt:"输入API基础URL（可选，留空使用默认值）",placeHolder:t.value===c.ModelProvider.OLLAMA?"http://localhost:11434":""});i?n.apiBase=i:t.value===c.ModelProvider.OLLAMA&&(n.apiBase="http://localhost:11434");const a=await r.window.showInputBox({prompt:"输入上下文长度（可选，留空使用默认值）",placeHolder:"例如: 8192, 32768, 128000"});if(a){const e=parseInt(a);isNaN(e)||(n.contextLength=e)}const l=await r.window.showInputBox({prompt:"输入生成温度（可选，留空使用默认值）",placeHolder:"例如: 0.3, 0.7, 1.0"});if(l){const e=parseFloat(l);isNaN(e)||(n.temperature=e)}const g=await r.window.showInputBox({prompt:"输入最大生成Token数（可选，留空使用默认值）",placeHolder:"例如: 1000, 2000, 4000"});if(g){const e=parseInt(g);isNaN(e)||(n.maxTokens=e)}if(await this.configManager.addModelConfig(n),r.window.showInformationMessage(`已添加模型: ${n.title}`),"是"===await r.window.showQuickPick(["是","否"],{placeHolder:"是否将此模型设置为当前使用的模型？"})){const e=this.configManager.getAvailableModels().length-1;await this.configManager.setSelectedModelIndex(e),r.window.showInformationMessage(`已将 ${n.title} 设置为当前模型`)}}async editModel(){const e=this.configManager.getAvailableModels();if(0===e.length)return void r.window.showInformationMessage("没有可用的模型配置");const t=e.map(((e,t)=>({label:e.title,description:`${e.provider} - ${e.model}`,index:t,model:e}))),n=await r.window.showQuickPick(t,{placeHolder:"选择要编辑的模型"});if(!n)return;const s={...n.model},o=await r.window.showInputBox({prompt:"输入模型显示名称",value:s.title});o&&(s.title=o);const i=await r.window.showInputBox({prompt:"输入模型名称",value:s.model});if(i&&(s.model=i),s.provider!==c.ModelProvider.OLLAMA){const e=await r.window.showInputBox({prompt:"输入API密钥（留空保持不变）",password:!0,placeHolder:s.apiKey?"******":"未设置"});e&&(s.apiKey=e)}const a=await r.window.showInputBox({prompt:"输入API基础URL（留空保持不变）",value:s.apiBase||""});a&&(s.apiBase=a);const l=await r.window.showInputBox({prompt:"输入上下文长度（留空保持不变）",value:s.contextLength?s.contextLength.toString():""});if(l){const e=parseInt(l);isNaN(e)||(s.contextLength=e)}const g=await r.window.showInputBox({prompt:"输入生成温度（留空保持不变）",value:s.temperature?s.temperature.toString():""});if(g){const e=parseFloat(g);isNaN(e)||(s.temperature=e)}const h=await r.window.showInputBox({prompt:"输入最大生成Token数（留空保持不变）",value:s.maxTokens?s.maxTokens.toString():""});if(h){const e=parseInt(h);isNaN(e)||(s.maxTokens=e)}await this.configManager.updateModelConfig(n.index,s),r.window.showInformationMessage(`已更新模型: ${s.title}`);const d=this.configManager.getSelectedModelConfig();e.findIndex((e=>e.title===d.title&&e.model===d.model&&e.provider===d.provider))===n.index&&r.window.showInformationMessage("当前选择的模型已更新")}async deleteModel(){const e=this.configManager.getAvailableModels();if(0===e.length)return void r.window.showInformationMessage("没有可用的模型配置");const t=e.map(((e,t)=>({label:e.title,description:`${e.provider} - ${e.model}`,index:t,model:e}))),n=await r.window.showQuickPick(t,{placeHolder:"选择要删除的模型"});n&&"是"===await r.window.showQuickPick(["是","否"],{placeHolder:`确定要删除模型 ${n.label} 吗？`})&&(await this.configManager.deleteModelConfig(n.index),r.window.showInformationMessage(`已删除模型: ${n.label}`))}dispose(){this.disposables.forEach((e=>e.dispose()))}}},942:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0});const s=n(982),o=new Uint8Array(256);let i=o.length;t.default=function(){return i>o.length-16&&((0,s.randomFillSync)(o),i=0),o.slice(i,i+=16)}},959:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0});const s=n(524),o=n(202);t.default=function(e){const t=(n="string"==typeof e?(0,s.default)(e):e,Uint8Array.of((15&n[3])<<4|n[4]>>4&15,(15&n[4])<<4|(240&n[5])>>4,(15&n[5])<<4|15&n[6],n[7],(15&n[1])<<4|(240&n[2])>>4,(15&n[2])<<4|(240&n[3])>>4,16|(240&n[0])>>4,(15&n[0])<<4|(240&n[1])>>4,n[8],n[9],n[10],n[11],n[12],n[13],n[14],n[15]));var n;return"string"==typeof e?(0,o.unsafeStringify)(t):t}},971:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0});const s=n(202),o=n(458),i=n(891);t.default=function(e,t,n){e??={},n??=0;let r=(0,o.default)({...e,_v6:!0},new Uint8Array(16));if(r=(0,i.default)(r),t){for(let e=0;e<16;e++)t[n+e]=r[e];return t}return(0,s.unsafeStringify)(r)}},982:e=>{e.exports=require("crypto")}},t={},n=function n(s){var o=t[s];if(void 0!==o)return o.exports;var i=t[s]={exports:{}};return e[s].call(i.exports,i,i.exports,n),i.exports}(265);module.exports=n})();